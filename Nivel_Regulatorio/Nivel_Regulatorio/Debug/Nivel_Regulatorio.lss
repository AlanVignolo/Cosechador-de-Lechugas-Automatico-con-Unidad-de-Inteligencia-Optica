
Nivel_Regulatorio.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001b6  00800200  000015e8  0000167c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000015e8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000012b  008003b6  008003b6  00001832  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001832  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001890  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000168  00000000  00000000  000018d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ced  00000000  00000000  00001a38  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010f1  00000000  00000000  00003725  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e8f  00000000  00000000  00004816  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004ac  00000000  00000000  000056a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a79  00000000  00000000  00005b54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f71  00000000  00000000  000065cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  0000753e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	73 c2       	rjmp	.+1254   	; 0x52c <__vector_17>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	c5 c5       	rjmp	.+2954   	; 0xbf0 <__vector_25>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	b0 c2       	rjmp	.+1376   	; 0x5e2 <__vector_32>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e8 ee       	ldi	r30, 0xE8	; 232
      fc:	f5 e1       	ldi	r31, 0x15	; 21
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a6 3b       	cpi	r26, 0xB6	; 182
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	24 e0       	ldi	r18, 0x04	; 4
     110:	a6 eb       	ldi	r26, 0xB6	; 182
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a1 3e       	cpi	r26, 0xE1	; 225
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	e8 d5       	rcall	.+3024   	; 0xcf0 <main>
     120:	0c 94 f2 0a 	jmp	0x15e4	; 0x15e4 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <parse_two_integers>:
#include <string.h>
#include <stdlib.h>
#include <stdio.h>

// Parser manual simple para dos números
static bool parse_two_integers(const char* str, int* x, int* y) {
     126:	cf 92       	push	r12
     128:	df 92       	push	r13
     12a:	ef 92       	push	r14
     12c:	ff 92       	push	r15
     12e:	0f 93       	push	r16
     130:	1f 93       	push	r17
     132:	cf 93       	push	r28
     134:	df 93       	push	r29
     136:	cd b7       	in	r28, 0x3d	; 61
     138:	de b7       	in	r29, 0x3e	; 62
     13a:	a0 97       	sbiw	r28, 0x20	; 32
     13c:	0f b6       	in	r0, 0x3f	; 63
     13e:	f8 94       	cli
     140:	de bf       	out	0x3e, r29	; 62
     142:	0f be       	out	0x3f, r0	; 63
     144:	cd bf       	out	0x3d, r28	; 61
     146:	6b 01       	movw	r12, r22
     148:	7a 01       	movw	r14, r20
	char temp_str[32];
	char* comma_pos;
	
	// Copiar string para modificarlo
	strncpy(temp_str, str, sizeof(temp_str) - 1);
     14a:	4f e1       	ldi	r20, 0x1F	; 31
     14c:	50 e0       	ldi	r21, 0x00	; 0
     14e:	bc 01       	movw	r22, r24
     150:	ce 01       	movw	r24, r28
     152:	01 96       	adiw	r24, 0x01	; 1
     154:	47 d7       	rcall	.+3726   	; 0xfe4 <strncpy>
	temp_str[sizeof(temp_str) - 1] = '\0';
     156:	18 a2       	std	Y+32, r1	; 0x20
	
	// Buscar la coma
	comma_pos = strchr(temp_str, ',');
     158:	6c e2       	ldi	r22, 0x2C	; 44
     15a:	70 e0       	ldi	r23, 0x00	; 0
     15c:	ce 01       	movw	r24, r28
     15e:	01 96       	adiw	r24, 0x01	; 1
     160:	36 d7       	rcall	.+3692   	; 0xfce <strchr>
	if (!comma_pos) return false;
     162:	00 97       	sbiw	r24, 0x00	; 0
     164:	81 f0       	breq	.+32     	; 0x186 <parse_two_integers+0x60>
	
	// Dividir en dos strings
	*comma_pos = '\0';  // Terminar primer número
     166:	fc 01       	movw	r30, r24
     168:	11 92       	st	Z+, r1
     16a:	8f 01       	movw	r16, r30
	
	// Convertir usando atoi
	*x = atoi(temp_str);
     16c:	ce 01       	movw	r24, r28
     16e:	01 96       	adiw	r24, 0x01	; 1
     170:	11 d7       	rcall	.+3618   	; 0xf94 <atoi>
     172:	f6 01       	movw	r30, r12
     174:	91 83       	std	Z+1, r25	; 0x01
	*y = atoi(comma_pos + 1);
     176:	80 83       	st	Z, r24
     178:	c8 01       	movw	r24, r16
     17a:	0c d7       	rcall	.+3608   	; 0xf94 <atoi>
     17c:	f7 01       	movw	r30, r14
     17e:	91 83       	std	Z+1, r25	; 0x01
     180:	80 83       	st	Z, r24
	
	return true;
     182:	81 e0       	ldi	r24, 0x01	; 1
     184:	01 c0       	rjmp	.+2      	; 0x188 <parse_two_integers+0x62>
	strncpy(temp_str, str, sizeof(temp_str) - 1);
	temp_str[sizeof(temp_str) - 1] = '\0';
	
	// Buscar la coma
	comma_pos = strchr(temp_str, ',');
	if (!comma_pos) return false;
     186:	80 e0       	ldi	r24, 0x00	; 0
	// Convertir usando atoi
	*x = atoi(temp_str);
	*y = atoi(comma_pos + 1);
	
	return true;
}
     188:	a0 96       	adiw	r28, 0x20	; 32
     18a:	0f b6       	in	r0, 0x3f	; 63
     18c:	f8 94       	cli
     18e:	de bf       	out	0x3e, r29	; 62
     190:	0f be       	out	0x3f, r0	; 63
     192:	cd bf       	out	0x3d, r28	; 61
     194:	df 91       	pop	r29
     196:	cf 91       	pop	r28
     198:	1f 91       	pop	r17
     19a:	0f 91       	pop	r16
     19c:	ff 90       	pop	r15
     19e:	ef 90       	pop	r14
     1a0:	df 90       	pop	r13
     1a2:	cf 90       	pop	r12
     1a4:	08 95       	ret

000001a6 <uart_parse_command>:

void uart_parse_command(const char* cmd) {
     1a6:	8f 92       	push	r8
     1a8:	9f 92       	push	r9
     1aa:	af 92       	push	r10
     1ac:	bf 92       	push	r11
     1ae:	cf 92       	push	r12
     1b0:	df 92       	push	r13
     1b2:	ef 92       	push	r14
     1b4:	ff 92       	push	r15
     1b6:	0f 93       	push	r16
     1b8:	1f 93       	push	r17
     1ba:	cf 93       	push	r28
     1bc:	df 93       	push	r29
     1be:	cd b7       	in	r28, 0x3d	; 61
     1c0:	de b7       	in	r29, 0x3e	; 62
     1c2:	c4 58       	subi	r28, 0x84	; 132
     1c4:	d1 09       	sbc	r29, r1
     1c6:	0f b6       	in	r0, 0x3f	; 63
     1c8:	f8 94       	cli
     1ca:	de bf       	out	0x3e, r29	; 62
     1cc:	0f be       	out	0x3f, r0	; 63
     1ce:	cd bf       	out	0x3d, r28	; 61
     1d0:	fc 01       	movw	r30, r24
	char response[128];
	
	if (cmd[0] == CMD_MOVE_XY && cmd[1] == ':') {
     1d2:	90 81       	ld	r25, Z
     1d4:	9d 34       	cpi	r25, 0x4D	; 77
     1d6:	09 f0       	breq	.+2      	; 0x1da <uart_parse_command+0x34>
     1d8:	8a c0       	rjmp	.+276    	; 0x2ee <uart_parse_command+0x148>
     1da:	81 81       	ldd	r24, Z+1	; 0x01
     1dc:	8a 33       	cpi	r24, 0x3A	; 58
     1de:	09 f0       	breq	.+2      	; 0x1e2 <uart_parse_command+0x3c>
     1e0:	86 c0       	rjmp	.+268    	; 0x2ee <uart_parse_command+0x148>
		int x, y;
		if (parse_two_integers(cmd + 2, &x, &y)) {
     1e2:	8f 01       	movw	r16, r30
     1e4:	0e 5f       	subi	r16, 0xFE	; 254
     1e6:	1f 4f       	sbci	r17, 0xFF	; 255
     1e8:	ae 01       	movw	r20, r28
     1ea:	4f 57       	subi	r20, 0x7F	; 127
     1ec:	5f 4f       	sbci	r21, 0xFF	; 255
     1ee:	be 01       	movw	r22, r28
     1f0:	6d 57       	subi	r22, 0x7D	; 125
     1f2:	7f 4f       	sbci	r23, 0xFF	; 255
     1f4:	c8 01       	movw	r24, r16
     1f6:	97 df       	rcall	.-210    	; 0x126 <parse_two_integers>
     1f8:	88 23       	and	r24, r24
     1fa:	09 f4       	brne	.+2      	; 0x1fe <uart_parse_command+0x58>
     1fc:	64 c0       	rjmp	.+200    	; 0x2c6 <uart_parse_command+0x120>
			// Convertir mm a pasos (RELATIVO)
			int32_t h_steps_relative = (int32_t)(x * STEPS_PER_MM_H);
     1fe:	cd 57       	subi	r28, 0x7D	; 125
     200:	df 4f       	sbci	r29, 0xFF	; 255
     202:	68 81       	ld	r22, Y
     204:	79 81       	ldd	r23, Y+1	; 0x01
     206:	c3 58       	subi	r28, 0x83	; 131
     208:	d0 40       	sbci	r29, 0x00	; 0
     20a:	07 2e       	mov	r0, r23
     20c:	00 0c       	add	r0, r0
     20e:	88 0b       	sbc	r24, r24
     210:	99 0b       	sbc	r25, r25
     212:	af d5       	rcall	.+2910   	; 0xd72 <__floatsisf>
     214:	20 e0       	ldi	r18, 0x00	; 0
     216:	30 e0       	ldi	r19, 0x00	; 0
     218:	40 ea       	ldi	r20, 0xA0	; 160
     21a:	52 e4       	ldi	r21, 0x42	; 66
     21c:	0e d6       	rcall	.+3100   	; 0xe3a <__mulsf3>
     21e:	76 d5       	rcall	.+2796   	; 0xd0c <__fixsfsi>
     220:	6b 01       	movw	r12, r22
     222:	7c 01       	movw	r14, r24
			int32_t v_steps_relative = (int32_t)(y * STEPS_PER_MM_V);
     224:	cf 57       	subi	r28, 0x7F	; 127
     226:	df 4f       	sbci	r29, 0xFF	; 255
     228:	68 81       	ld	r22, Y
     22a:	79 81       	ldd	r23, Y+1	; 0x01
     22c:	c1 58       	subi	r28, 0x81	; 129
     22e:	d0 40       	sbci	r29, 0x00	; 0
     230:	07 2e       	mov	r0, r23
     232:	00 0c       	add	r0, r0
     234:	88 0b       	sbc	r24, r24
     236:	99 0b       	sbc	r25, r25
     238:	9c d5       	rcall	.+2872   	; 0xd72 <__floatsisf>
     23a:	20 e0       	ldi	r18, 0x00	; 0
     23c:	30 e0       	ldi	r19, 0x00	; 0
     23e:	48 ec       	ldi	r20, 0xC8	; 200
     240:	53 e4       	ldi	r21, 0x43	; 67
     242:	fb d5       	rcall	.+3062   	; 0xe3a <__mulsf3>
     244:	63 d5       	rcall	.+2758   	; 0xd0c <__fixsfsi>
     246:	4b 01       	movw	r8, r22
     248:	5c 01       	movw	r10, r24
			
			// Habilitar motores solo si hay movimiento que hacer
			bool need_h_move = (h_steps_relative != 0);
     24a:	81 e0       	ldi	r24, 0x01	; 1
     24c:	c1 14       	cp	r12, r1
     24e:	d1 04       	cpc	r13, r1
     250:	e1 04       	cpc	r14, r1
     252:	f1 04       	cpc	r15, r1
     254:	09 f4       	brne	.+2      	; 0x258 <uart_parse_command+0xb2>
     256:	80 e0       	ldi	r24, 0x00	; 0
			bool need_v_move = (v_steps_relative != 0);
     258:	61 e0       	ldi	r22, 0x01	; 1
     25a:	81 14       	cp	r8, r1
     25c:	91 04       	cpc	r9, r1
     25e:	a1 04       	cpc	r10, r1
     260:	b1 04       	cpc	r11, r1
			
			stepper_enable_motors(need_h_move, need_v_move);
     262:	09 f4       	brne	.+2      	; 0x266 <uart_parse_command+0xc0>
     264:	60 e0       	ldi	r22, 0x00	; 0
			
			// Usar movimiento RELATIVO
			stepper_move_relative(h_steps_relative, v_steps_relative);
     266:	18 d2       	rcall	.+1072   	; 0x698 <stepper_enable_motors>
     268:	a5 01       	movw	r20, r10
     26a:	94 01       	movw	r18, r8
     26c:	c7 01       	movw	r24, r14
     26e:	b6 01       	movw	r22, r12
     270:	16 d3       	rcall	.+1580   	; 0x89e <stepper_move_relative>
			
			snprintf(response, sizeof(response), "OK:MOVE_XY:%d,%d", x, y);
     272:	ce 57       	subi	r28, 0x7E	; 126
     274:	df 4f       	sbci	r29, 0xFF	; 255
     276:	88 81       	ld	r24, Y
     278:	c2 58       	subi	r28, 0x82	; 130
     27a:	d0 40       	sbci	r29, 0x00	; 0
     27c:	8f 93       	push	r24
     27e:	cf 57       	subi	r28, 0x7F	; 127
     280:	df 4f       	sbci	r29, 0xFF	; 255
     282:	88 81       	ld	r24, Y
     284:	c1 58       	subi	r28, 0x81	; 129
     286:	d0 40       	sbci	r29, 0x00	; 0
     288:	8f 93       	push	r24
     28a:	cc 57       	subi	r28, 0x7C	; 124
     28c:	df 4f       	sbci	r29, 0xFF	; 255
     28e:	88 81       	ld	r24, Y
     290:	c4 58       	subi	r28, 0x84	; 132
     292:	d0 40       	sbci	r29, 0x00	; 0
     294:	8f 93       	push	r24
     296:	cd 57       	subi	r28, 0x7D	; 125
     298:	df 4f       	sbci	r29, 0xFF	; 255
     29a:	88 81       	ld	r24, Y
     29c:	c3 58       	subi	r28, 0x83	; 131
     29e:	d0 40       	sbci	r29, 0x00	; 0
     2a0:	8f 93       	push	r24
     2a2:	80 e0       	ldi	r24, 0x00	; 0
     2a4:	92 e0       	ldi	r25, 0x02	; 2
     2a6:	9f 93       	push	r25
     2a8:	8f 93       	push	r24
     2aa:	1f 92       	push	r1
     2ac:	80 e8       	ldi	r24, 0x80	; 128
     2ae:	8f 93       	push	r24
     2b0:	ce 01       	movw	r24, r28
     2b2:	01 96       	adiw	r24, 0x01	; 1
     2b4:	9f 93       	push	r25
     2b6:	8f 93       	push	r24
     2b8:	ac d6       	rcall	.+3416   	; 0x1012 <snprintf>
     2ba:	0f b6       	in	r0, 0x3f	; 63
     2bc:	f8 94       	cli
     2be:	de bf       	out	0x3e, r29	; 62
     2c0:	0f be       	out	0x3f, r0	; 63
     2c2:	cd bf       	out	0x3d, r28	; 61
     2c4:	d0 c0       	rjmp	.+416    	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
			} else {
			snprintf(response, sizeof(response), "ERR:INVALID_PARAMS_MOVE_XY:<%s>", cmd + 2);
     2c6:	1f 93       	push	r17
     2c8:	0f 93       	push	r16
     2ca:	81 e1       	ldi	r24, 0x11	; 17
     2cc:	92 e0       	ldi	r25, 0x02	; 2
     2ce:	9f 93       	push	r25
     2d0:	8f 93       	push	r24
     2d2:	1f 92       	push	r1
     2d4:	80 e8       	ldi	r24, 0x80	; 128
     2d6:	8f 93       	push	r24
     2d8:	ce 01       	movw	r24, r28
     2da:	01 96       	adiw	r24, 0x01	; 1
     2dc:	9f 93       	push	r25
     2de:	8f 93       	push	r24
     2e0:	98 d6       	rcall	.+3376   	; 0x1012 <snprintf>
     2e2:	0f b6       	in	r0, 0x3f	; 63
     2e4:	f8 94       	cli
     2e6:	de bf       	out	0x3e, r29	; 62
     2e8:	0f be       	out	0x3f, r0	; 63
}

void uart_parse_command(const char* cmd) {
	char response[128];
	
	if (cmd[0] == CMD_MOVE_XY && cmd[1] == ':') {
     2ea:	cd bf       	out	0x3d, r28	; 61
			snprintf(response, sizeof(response), "OK:MOVE_XY:%d,%d", x, y);
			} else {
			snprintf(response, sizeof(response), "ERR:INVALID_PARAMS_MOVE_XY:<%s>", cmd + 2);
		}
	}
	else if (cmd[0] == 'D') {  // Comando debug
     2ec:	bc c0       	rjmp	.+376    	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     2ee:	94 34       	cpi	r25, 0x44	; 68
		stepper_debug_info();  // Solo llamar la función
     2f0:	59 f4       	brne	.+22     	; 0x308 <uart_parse_command+0x162>
     2f2:	ff d2       	rcall	.+1534   	; 0x8f2 <stepper_debug_info>
		snprintf(response, sizeof(response), "OK:DEBUG");
     2f4:	89 e0       	ldi	r24, 0x09	; 9
     2f6:	e1 e3       	ldi	r30, 0x31	; 49
     2f8:	f2 e0       	ldi	r31, 0x02	; 2
     2fa:	de 01       	movw	r26, r28
     2fc:	11 96       	adiw	r26, 0x01	; 1
     2fe:	01 90       	ld	r0, Z+
     300:	0d 92       	st	X+, r0
     302:	8a 95       	dec	r24
     304:	e1 f7       	brne	.-8      	; 0x2fe <uart_parse_command+0x158>
	}
	else if (cmd[0] == 'E') {  // Debug extendido
     306:	af c0       	rjmp	.+350    	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     308:	95 34       	cpi	r25, 0x45	; 69
		stepper_debug_motor_state();
     30a:	59 f4       	brne	.+22     	; 0x322 <uart_parse_command+0x17c>
		snprintf(response, sizeof(response), "OK:DEBUG_STATE");
     30c:	55 d3       	rcall	.+1706   	; 0x9b8 <stepper_debug_motor_state>
     30e:	8f e0       	ldi	r24, 0x0F	; 15
     310:	ea e3       	ldi	r30, 0x3A	; 58
     312:	f2 e0       	ldi	r31, 0x02	; 2
     314:	de 01       	movw	r26, r28
     316:	11 96       	adiw	r26, 0x01	; 1
     318:	01 90       	ld	r0, Z+
     31a:	0d 92       	st	X+, r0
     31c:	8a 95       	dec	r24
     31e:	e1 f7       	brne	.-8      	; 0x318 <uart_parse_command+0x172>
	}
    else if (cmd[0] == CMD_STOP) {
     320:	a2 c0       	rjmp	.+324    	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     322:	93 35       	cpi	r25, 0x53	; 83
	    stepper_stop_all();
     324:	59 f4       	brne	.+22     	; 0x33c <uart_parse_command+0x196>
     326:	18 d2       	rcall	.+1072   	; 0x758 <stepper_stop_all>
	    snprintf(response, sizeof(response), "OK:STOP");
     328:	88 e0       	ldi	r24, 0x08	; 8
     32a:	e9 e4       	ldi	r30, 0x49	; 73
     32c:	f2 e0       	ldi	r31, 0x02	; 2
     32e:	de 01       	movw	r26, r28
     330:	11 96       	adiw	r26, 0x01	; 1
     332:	01 90       	ld	r0, Z+
     334:	0d 92       	st	X+, r0
     336:	8a 95       	dec	r24
     338:	e1 f7       	brne	.-8      	; 0x332 <uart_parse_command+0x18c>
     33a:	95 c0       	rjmp	.+298    	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
    }
	else if (cmd[0] == CMD_HOME) {
     33c:	98 34       	cpi	r25, 0x48	; 72
     33e:	51 f4       	brne	.+20     	; 0x354 <uart_parse_command+0x1ae>
		snprintf(response, sizeof(response), "OK:HOME");
     340:	88 e0       	ldi	r24, 0x08	; 8
     342:	e1 e5       	ldi	r30, 0x51	; 81
     344:	f2 e0       	ldi	r31, 0x02	; 2
     346:	de 01       	movw	r26, r28
     348:	11 96       	adiw	r26, 0x01	; 1
     34a:	01 90       	ld	r0, Z+
     34c:	0d 92       	st	X+, r0
     34e:	8a 95       	dec	r24
     350:	e1 f7       	brne	.-8      	; 0x34a <uart_parse_command+0x1a4>
     352:	89 c0       	rjmp	.+274    	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
	}
	else if (cmd[0] == CMD_STATUS) {
     354:	9f 33       	cpi	r25, 0x3F	; 63
     356:	51 f4       	brne	.+20     	; 0x36c <uart_parse_command+0x1c6>
		snprintf(response, sizeof(response), "OK:STATUS:IDLE:0,0");
     358:	83 e1       	ldi	r24, 0x13	; 19
     35a:	e9 e5       	ldi	r30, 0x59	; 89
     35c:	f2 e0       	ldi	r31, 0x02	; 2
     35e:	de 01       	movw	r26, r28
     360:	11 96       	adiw	r26, 0x01	; 1
     362:	01 90       	ld	r0, Z+
     364:	0d 92       	st	X+, r0
     366:	8a 95       	dec	r24
     368:	e1 f7       	brne	.-8      	; 0x362 <uart_parse_command+0x1bc>
     36a:	7d c0       	rjmp	.+250    	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
	}
	else if (cmd[0] == CMD_ARM_POSITION && cmd[1] == ':') {
     36c:	91 34       	cpi	r25, 0x41	; 65
     36e:	c1 f4       	brne	.+48     	; 0x3a0 <uart_parse_command+0x1fa>
     370:	81 81       	ldd	r24, Z+1	; 0x01
     372:	8a 33       	cpi	r24, 0x3A	; 58
     374:	a9 f4       	brne	.+42     	; 0x3a0 <uart_parse_command+0x1fa>
		snprintf(response, sizeof(response), "OK:ARM_POSITION:%s", cmd + 2);
     376:	32 96       	adiw	r30, 0x02	; 2
     378:	ff 93       	push	r31
     37a:	ef 93       	push	r30
     37c:	8c e6       	ldi	r24, 0x6C	; 108
     37e:	92 e0       	ldi	r25, 0x02	; 2
     380:	9f 93       	push	r25
     382:	8f 93       	push	r24
     384:	1f 92       	push	r1
     386:	80 e8       	ldi	r24, 0x80	; 128
     388:	8f 93       	push	r24
     38a:	ce 01       	movw	r24, r28
     38c:	01 96       	adiw	r24, 0x01	; 1
     38e:	9f 93       	push	r25
     390:	8f 93       	push	r24
     392:	3f d6       	rcall	.+3198   	; 0x1012 <snprintf>
     394:	0f b6       	in	r0, 0x3f	; 63
     396:	f8 94       	cli
     398:	de bf       	out	0x3e, r29	; 62
     39a:	0f be       	out	0x3f, r0	; 63
     39c:	cd bf       	out	0x3d, r28	; 61
     39e:	63 c0       	rjmp	.+198    	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
	}
	else if (cmd[0] == CMD_GRIPPER && cmd[1] == ':') {
     3a0:	97 34       	cpi	r25, 0x47	; 71
     3a2:	c1 f4       	brne	.+48     	; 0x3d4 <uart_parse_command+0x22e>
     3a4:	81 81       	ldd	r24, Z+1	; 0x01
     3a6:	8a 33       	cpi	r24, 0x3A	; 58
		snprintf(response, sizeof(response), "OK:GRIPPER:%s", cmd + 2);
     3a8:	a9 f4       	brne	.+42     	; 0x3d4 <uart_parse_command+0x22e>
     3aa:	32 96       	adiw	r30, 0x02	; 2
     3ac:	ff 93       	push	r31
     3ae:	ef 93       	push	r30
     3b0:	8f e7       	ldi	r24, 0x7F	; 127
     3b2:	92 e0       	ldi	r25, 0x02	; 2
     3b4:	9f 93       	push	r25
     3b6:	8f 93       	push	r24
     3b8:	1f 92       	push	r1
     3ba:	80 e8       	ldi	r24, 0x80	; 128
     3bc:	8f 93       	push	r24
     3be:	ce 01       	movw	r24, r28
     3c0:	01 96       	adiw	r24, 0x01	; 1
     3c2:	9f 93       	push	r25
     3c4:	8f 93       	push	r24
     3c6:	25 d6       	rcall	.+3146   	; 0x1012 <snprintf>
     3c8:	0f b6       	in	r0, 0x3f	; 63
     3ca:	f8 94       	cli
     3cc:	de bf       	out	0x3e, r29	; 62
     3ce:	0f be       	out	0x3f, r0	; 63
     3d0:	cd bf       	out	0x3d, r28	; 61
	}
	else if (cmd[0] == CMD_SET_SPEED && cmd[1] == ':') {
     3d2:	49 c0       	rjmp	.+146    	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     3d4:	96 35       	cpi	r25, 0x56	; 86
     3d6:	d1 f4       	brne	.+52     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     3d8:	81 81       	ldd	r24, Z+1	; 0x01
     3da:	8a 33       	cpi	r24, 0x3A	; 58
		int speed = atoi(cmd + 2);
     3dc:	b9 f4       	brne	.+46     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     3de:	cf 01       	movw	r24, r30
     3e0:	02 96       	adiw	r24, 0x02	; 2
		snprintf(response, sizeof(response), "OK:SET_SPEED:%d", speed);
     3e2:	d8 d5       	rcall	.+2992   	; 0xf94 <atoi>
     3e4:	9f 93       	push	r25
     3e6:	8f 93       	push	r24
     3e8:	8d e8       	ldi	r24, 0x8D	; 141
     3ea:	92 e0       	ldi	r25, 0x02	; 2
     3ec:	9f 93       	push	r25
     3ee:	8f 93       	push	r24
     3f0:	1f 92       	push	r1
     3f2:	80 e8       	ldi	r24, 0x80	; 128
     3f4:	8f 93       	push	r24
     3f6:	ce 01       	movw	r24, r28
     3f8:	01 96       	adiw	r24, 0x01	; 1
     3fa:	9f 93       	push	r25
     3fc:	8f 93       	push	r24
     3fe:	09 d6       	rcall	.+3090   	; 0x1012 <snprintf>
		snprintf(response, sizeof(response), "OK:ARM_POSITION:%s", cmd + 2);
	}
	else if (cmd[0] == CMD_GRIPPER && cmd[1] == ':') {
		snprintf(response, sizeof(response), "OK:GRIPPER:%s", cmd + 2);
	}
	else if (cmd[0] == CMD_SET_SPEED && cmd[1] == ':') {
     400:	0f b6       	in	r0, 0x3f	; 63
     402:	f8 94       	cli
     404:	de bf       	out	0x3e, r29	; 62
     406:	0f be       	out	0x3f, r0	; 63
     408:	cd bf       	out	0x3d, r28	; 61
     40a:	2d c0       	rjmp	.+90     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
		int speed = atoi(cmd + 2);
		snprintf(response, sizeof(response), "OK:SET_SPEED:%d", speed);
	}
	else if (cmd[0] == CMD_ARM_TRAJECTORY && cmd[1] == ':') {
     40c:	94 35       	cpi	r25, 0x54	; 84
     40e:	c1 f4       	brne	.+48     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     410:	81 81       	ldd	r24, Z+1	; 0x01
     412:	8a 33       	cpi	r24, 0x3A	; 58
		snprintf(response, sizeof(response), "OK:ARM_TRAJECTORY:%s", cmd + 2);
     414:	a9 f4       	brne	.+42     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     416:	32 96       	adiw	r30, 0x02	; 2
     418:	ff 93       	push	r31
     41a:	ef 93       	push	r30
     41c:	8d e9       	ldi	r24, 0x9D	; 157
     41e:	92 e0       	ldi	r25, 0x02	; 2
     420:	9f 93       	push	r25
     422:	8f 93       	push	r24
     424:	1f 92       	push	r1
     426:	80 e8       	ldi	r24, 0x80	; 128
     428:	8f 93       	push	r24
     42a:	ce 01       	movw	r24, r28
     42c:	01 96       	adiw	r24, 0x01	; 1
     42e:	9f 93       	push	r25
     430:	8f 93       	push	r24
     432:	ef d5       	rcall	.+3038   	; 0x1012 <snprintf>
     434:	0f b6       	in	r0, 0x3f	; 63
     436:	f8 94       	cli
     438:	de bf       	out	0x3e, r29	; 62
     43a:	0f be       	out	0x3f, r0	; 63
     43c:	cd bf       	out	0x3d, r28	; 61
	}
	else {
		snprintf(response, sizeof(response), "ERR:UNKNOWN_CMD:%s", cmd);
     43e:	13 c0       	rjmp	.+38     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     440:	ff 93       	push	r31
     442:	ef 93       	push	r30
     444:	82 eb       	ldi	r24, 0xB2	; 178
     446:	92 e0       	ldi	r25, 0x02	; 2
     448:	9f 93       	push	r25
     44a:	8f 93       	push	r24
     44c:	1f 92       	push	r1
     44e:	80 e8       	ldi	r24, 0x80	; 128
     450:	8f 93       	push	r24
     452:	ce 01       	movw	r24, r28
     454:	01 96       	adiw	r24, 0x01	; 1
     456:	9f 93       	push	r25
     458:	8f 93       	push	r24
     45a:	db d5       	rcall	.+2998   	; 0x1012 <snprintf>
     45c:	0f b6       	in	r0, 0x3f	; 63
     45e:	f8 94       	cli
     460:	de bf       	out	0x3e, r29	; 62
     462:	0f be       	out	0x3f, r0	; 63
	}
	
	uart_send_response(response);
     464:	cd bf       	out	0x3d, r28	; 61
     466:	ce 01       	movw	r24, r28
     468:	01 96       	adiw	r24, 0x01	; 1
     46a:	a8 d3       	rcall	.+1872   	; 0xbbc <uart_send_response>
     46c:	cc 57       	subi	r28, 0x7C	; 124
     46e:	df 4f       	sbci	r29, 0xFF	; 255
     470:	0f b6       	in	r0, 0x3f	; 63
     472:	f8 94       	cli
     474:	de bf       	out	0x3e, r29	; 62
     476:	0f be       	out	0x3f, r0	; 63
     478:	cd bf       	out	0x3d, r28	; 61
     47a:	df 91       	pop	r29
     47c:	cf 91       	pop	r28
     47e:	1f 91       	pop	r17
     480:	0f 91       	pop	r16
     482:	ff 90       	pop	r15
     484:	ef 90       	pop	r14
     486:	df 90       	pop	r13
     488:	cf 90       	pop	r12
     48a:	bf 90       	pop	r11
     48c:	af 90       	pop	r10
     48e:	9f 90       	pop	r9
     490:	8f 90       	pop	r8
     492:	08 95       	ret

00000494 <calculate_timer_top>:
	*v_pos = vertical_axis.current_position;
}

void stepper_set_position(int32_t h_pos, int32_t v_pos) {
	horizontal_axis.current_position = h_pos;
	vertical_axis.current_position = v_pos;
     494:	a0 e0       	ldi	r26, 0x00	; 0
     496:	b0 e0       	ldi	r27, 0x00	; 0
     498:	88 0f       	add	r24, r24
     49a:	99 1f       	adc	r25, r25
     49c:	aa 1f       	adc	r26, r26
     49e:	bb 1f       	adc	r27, r27
     4a0:	88 0f       	add	r24, r24
     4a2:	99 1f       	adc	r25, r25
     4a4:	aa 1f       	adc	r26, r26
     4a6:	bb 1f       	adc	r27, r27
     4a8:	9c 01       	movw	r18, r24
     4aa:	ad 01       	movw	r20, r26
     4ac:	22 0f       	add	r18, r18
     4ae:	33 1f       	adc	r19, r19
     4b0:	44 1f       	adc	r20, r20
     4b2:	55 1f       	adc	r21, r21
     4b4:	22 0f       	add	r18, r18
     4b6:	33 1f       	adc	r19, r19
     4b8:	44 1f       	adc	r20, r20
     4ba:	55 1f       	adc	r21, r21
     4bc:	60 e0       	ldi	r22, 0x00	; 0
     4be:	74 e2       	ldi	r23, 0x24	; 36
     4c0:	84 ef       	ldi	r24, 0xF4	; 244
     4c2:	90 e0       	ldi	r25, 0x00	; 0
     4c4:	45 d5       	rcall	.+2698   	; 0xf50 <__udivmodsi4>
     4c6:	c9 01       	movw	r24, r18
     4c8:	01 97       	sbiw	r24, 0x01	; 1
     4ca:	08 95       	ret

000004cc <start_horizontal_movement>:
     4cc:	00 97       	sbiw	r24, 0x00	; 0
     4ce:	b9 f0       	breq	.+46     	; 0x4fe <start_horizontal_movement+0x32>
     4d0:	e1 df       	rcall	.-62     	; 0x494 <calculate_timer_top>
     4d2:	20 e5       	ldi	r18, 0x50	; 80
     4d4:	20 93 80 00 	sts	0x0080, r18	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
     4d8:	2a e0       	ldi	r18, 0x0A	; 10
     4da:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
     4de:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
     4e2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
     4e6:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
     4ea:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
     4ee:	ef e6       	ldi	r30, 0x6F	; 111
     4f0:	f0 e0       	ldi	r31, 0x00	; 0
     4f2:	80 81       	ld	r24, Z
     4f4:	82 60       	ori	r24, 0x02	; 2
     4f6:	80 83       	st	Z, r24
     4f8:	81 e0       	ldi	r24, 0x01	; 1
     4fa:	80 93 b7 03 	sts	0x03B7, r24	; 0x8003b7 <timer1_active>
     4fe:	08 95       	ret

00000500 <start_vertical_movement>:
     500:	00 97       	sbiw	r24, 0x00	; 0
     502:	99 f0       	breq	.+38     	; 0x52a <start_vertical_movement+0x2a>
     504:	c7 df       	rcall	.-114    	; 0x494 <calculate_timer_top>
     506:	20 e4       	ldi	r18, 0x40	; 64
     508:	20 93 90 00 	sts	0x0090, r18	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
     50c:	2a e0       	ldi	r18, 0x0A	; 10
     50e:	20 93 91 00 	sts	0x0091, r18	; 0x800091 <__TEXT_REGION_LENGTH__+0x7c0091>
     512:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7c0099>
     516:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7c0098>
     51a:	e1 e7       	ldi	r30, 0x71	; 113
     51c:	f0 e0       	ldi	r31, 0x00	; 0
     51e:	80 81       	ld	r24, Z
     520:	82 60       	ori	r24, 0x02	; 2
     522:	80 83       	st	Z, r24
     524:	81 e0       	ldi	r24, 0x01	; 1
     526:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <__data_end>
     52a:	08 95       	ret

0000052c <__vector_17>:
     52c:	1f 92       	push	r1
     52e:	0f 92       	push	r0
     530:	0f b6       	in	r0, 0x3f	; 63
     532:	0f 92       	push	r0
     534:	11 24       	eor	r1, r1
     536:	0b b6       	in	r0, 0x3b	; 59
     538:	0f 92       	push	r0
     53a:	4f 93       	push	r20
     53c:	5f 93       	push	r21
     53e:	6f 93       	push	r22
     540:	7f 93       	push	r23
     542:	8f 93       	push	r24
     544:	9f 93       	push	r25
     546:	af 93       	push	r26
     548:	bf 93       	push	r27
     54a:	ef 93       	push	r30
     54c:	ff 93       	push	r31
     54e:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <horizontal_axis+0xf>
     552:	88 23       	and	r24, r24
     554:	71 f0       	breq	.+28     	; 0x572 <__vector_17+0x46>
     556:	e9 ec       	ldi	r30, 0xC9	; 201
     558:	f3 e0       	ldi	r31, 0x03	; 3
     55a:	80 81       	ld	r24, Z
     55c:	91 81       	ldd	r25, Z+1	; 0x01
     55e:	a2 81       	ldd	r26, Z+2	; 0x02
     560:	b3 81       	ldd	r27, Z+3	; 0x03
     562:	01 96       	adiw	r24, 0x01	; 1
     564:	a1 1d       	adc	r26, r1
     566:	b1 1d       	adc	r27, r1
     568:	80 83       	st	Z, r24
     56a:	91 83       	std	Z+1, r25	; 0x01
     56c:	a2 83       	std	Z+2, r26	; 0x02
     56e:	b3 83       	std	Z+3, r27	; 0x03
     570:	0d c0       	rjmp	.+26     	; 0x58c <__vector_17+0x60>
     572:	e9 ec       	ldi	r30, 0xC9	; 201
     574:	f3 e0       	ldi	r31, 0x03	; 3
     576:	80 81       	ld	r24, Z
     578:	91 81       	ldd	r25, Z+1	; 0x01
     57a:	a2 81       	ldd	r26, Z+2	; 0x02
     57c:	b3 81       	ldd	r27, Z+3	; 0x03
     57e:	01 97       	sbiw	r24, 0x01	; 1
     580:	a1 09       	sbc	r26, r1
     582:	b1 09       	sbc	r27, r1
     584:	80 83       	st	Z, r24
     586:	91 83       	std	Z+1, r25	; 0x01
     588:	a2 83       	std	Z+2, r26	; 0x02
     58a:	b3 83       	std	Z+3, r27	; 0x03
     58c:	e9 ec       	ldi	r30, 0xC9	; 201
     58e:	f3 e0       	ldi	r31, 0x03	; 3
     590:	40 81       	ld	r20, Z
     592:	51 81       	ldd	r21, Z+1	; 0x01
     594:	62 81       	ldd	r22, Z+2	; 0x02
     596:	73 81       	ldd	r23, Z+3	; 0x03
     598:	84 81       	ldd	r24, Z+4	; 0x04
     59a:	95 81       	ldd	r25, Z+5	; 0x05
     59c:	a6 81       	ldd	r26, Z+6	; 0x06
     59e:	b7 81       	ldd	r27, Z+7	; 0x07
     5a0:	48 17       	cp	r20, r24
     5a2:	59 07       	cpc	r21, r25
     5a4:	6a 07       	cpc	r22, r26
     5a6:	7b 07       	cpc	r23, r27
     5a8:	59 f4       	brne	.+22     	; 0x5c0 <__vector_17+0x94>
     5aa:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
     5ae:	ef e6       	ldi	r30, 0x6F	; 111
     5b0:	f0 e0       	ldi	r31, 0x00	; 0
     5b2:	80 81       	ld	r24, Z
     5b4:	8d 7f       	andi	r24, 0xFD	; 253
     5b6:	80 83       	st	Z, r24
     5b8:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <horizontal_axis+0xe>
     5bc:	10 92 b7 03 	sts	0x03B7, r1	; 0x8003b7 <timer1_active>
     5c0:	ff 91       	pop	r31
     5c2:	ef 91       	pop	r30
     5c4:	bf 91       	pop	r27
     5c6:	af 91       	pop	r26
     5c8:	9f 91       	pop	r25
     5ca:	8f 91       	pop	r24
     5cc:	7f 91       	pop	r23
     5ce:	6f 91       	pop	r22
     5d0:	5f 91       	pop	r21
     5d2:	4f 91       	pop	r20
     5d4:	0f 90       	pop	r0
     5d6:	0b be       	out	0x3b, r0	; 59
     5d8:	0f 90       	pop	r0
     5da:	0f be       	out	0x3f, r0	; 63
     5dc:	0f 90       	pop	r0
     5de:	1f 90       	pop	r1
     5e0:	18 95       	reti

000005e2 <__vector_32>:
     5e2:	1f 92       	push	r1
     5e4:	0f 92       	push	r0
     5e6:	0f b6       	in	r0, 0x3f	; 63
     5e8:	0f 92       	push	r0
     5ea:	11 24       	eor	r1, r1
     5ec:	0b b6       	in	r0, 0x3b	; 59
     5ee:	0f 92       	push	r0
     5f0:	4f 93       	push	r20
     5f2:	5f 93       	push	r21
     5f4:	6f 93       	push	r22
     5f6:	7f 93       	push	r23
     5f8:	8f 93       	push	r24
     5fa:	9f 93       	push	r25
     5fc:	af 93       	push	r26
     5fe:	bf 93       	push	r27
     600:	ef 93       	push	r30
     602:	ff 93       	push	r31
     604:	80 91 c7 03 	lds	r24, 0x03C7	; 0x8003c7 <vertical_axis+0xf>
     608:	88 23       	and	r24, r24
     60a:	71 f0       	breq	.+28     	; 0x628 <__vector_32+0x46>
     60c:	e8 eb       	ldi	r30, 0xB8	; 184
     60e:	f3 e0       	ldi	r31, 0x03	; 3
     610:	80 81       	ld	r24, Z
     612:	91 81       	ldd	r25, Z+1	; 0x01
     614:	a2 81       	ldd	r26, Z+2	; 0x02
     616:	b3 81       	ldd	r27, Z+3	; 0x03
     618:	01 96       	adiw	r24, 0x01	; 1
     61a:	a1 1d       	adc	r26, r1
     61c:	b1 1d       	adc	r27, r1
     61e:	80 83       	st	Z, r24
     620:	91 83       	std	Z+1, r25	; 0x01
     622:	a2 83       	std	Z+2, r26	; 0x02
     624:	b3 83       	std	Z+3, r27	; 0x03
     626:	0d c0       	rjmp	.+26     	; 0x642 <__vector_32+0x60>
     628:	e8 eb       	ldi	r30, 0xB8	; 184
     62a:	f3 e0       	ldi	r31, 0x03	; 3
     62c:	80 81       	ld	r24, Z
     62e:	91 81       	ldd	r25, Z+1	; 0x01
     630:	a2 81       	ldd	r26, Z+2	; 0x02
     632:	b3 81       	ldd	r27, Z+3	; 0x03
     634:	01 97       	sbiw	r24, 0x01	; 1
     636:	a1 09       	sbc	r26, r1
     638:	b1 09       	sbc	r27, r1
     63a:	80 83       	st	Z, r24
     63c:	91 83       	std	Z+1, r25	; 0x01
     63e:	a2 83       	std	Z+2, r26	; 0x02
     640:	b3 83       	std	Z+3, r27	; 0x03
     642:	e8 eb       	ldi	r30, 0xB8	; 184
     644:	f3 e0       	ldi	r31, 0x03	; 3
     646:	40 81       	ld	r20, Z
     648:	51 81       	ldd	r21, Z+1	; 0x01
     64a:	62 81       	ldd	r22, Z+2	; 0x02
     64c:	73 81       	ldd	r23, Z+3	; 0x03
     64e:	84 81       	ldd	r24, Z+4	; 0x04
     650:	95 81       	ldd	r25, Z+5	; 0x05
     652:	a6 81       	ldd	r26, Z+6	; 0x06
     654:	b7 81       	ldd	r27, Z+7	; 0x07
     656:	48 17       	cp	r20, r24
     658:	59 07       	cpc	r21, r25
     65a:	6a 07       	cpc	r22, r26
     65c:	7b 07       	cpc	r23, r27
     65e:	59 f4       	brne	.+22     	; 0x676 <__vector_32+0x94>
     660:	10 92 91 00 	sts	0x0091, r1	; 0x800091 <__TEXT_REGION_LENGTH__+0x7c0091>
     664:	e1 e7       	ldi	r30, 0x71	; 113
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	80 81       	ld	r24, Z
     66a:	8d 7f       	andi	r24, 0xFD	; 253
     66c:	80 83       	st	Z, r24
     66e:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <vertical_axis+0xe>
     672:	10 92 b6 03 	sts	0x03B6, r1	; 0x8003b6 <__data_end>
     676:	ff 91       	pop	r31
     678:	ef 91       	pop	r30
     67a:	bf 91       	pop	r27
     67c:	af 91       	pop	r26
     67e:	9f 91       	pop	r25
     680:	8f 91       	pop	r24
     682:	7f 91       	pop	r23
     684:	6f 91       	pop	r22
     686:	5f 91       	pop	r21
     688:	4f 91       	pop	r20
     68a:	0f 90       	pop	r0
     68c:	0b be       	out	0x3b, r0	; 59
     68e:	0f 90       	pop	r0
     690:	0f be       	out	0x3f, r0	; 63
     692:	0f 90       	pop	r0
     694:	1f 90       	pop	r1
     696:	18 95       	reti

00000698 <stepper_enable_motors>:
     698:	88 23       	and	r24, r24
     69a:	39 f0       	breq	.+14     	; 0x6aa <stepper_enable_motors+0x12>
     69c:	82 b1       	in	r24, 0x02	; 2
     69e:	85 7f       	andi	r24, 0xF5	; 245
     6a0:	82 b9       	out	0x02, r24	; 2
     6a2:	81 e0       	ldi	r24, 0x01	; 1
     6a4:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <horizontal_axis+0x10>
     6a8:	05 c0       	rjmp	.+10     	; 0x6b4 <stepper_enable_motors+0x1c>
     6aa:	82 b1       	in	r24, 0x02	; 2
     6ac:	8a 60       	ori	r24, 0x0A	; 10
     6ae:	82 b9       	out	0x02, r24	; 2
     6b0:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <horizontal_axis+0x10>
     6b4:	66 23       	and	r22, r22
     6b6:	39 f0       	breq	.+14     	; 0x6c6 <stepper_enable_motors+0x2e>
     6b8:	82 b1       	in	r24, 0x02	; 2
     6ba:	8f 7d       	andi	r24, 0xDF	; 223
     6bc:	82 b9       	out	0x02, r24	; 2
     6be:	81 e0       	ldi	r24, 0x01	; 1
     6c0:	80 93 c8 03 	sts	0x03C8, r24	; 0x8003c8 <vertical_axis+0x10>
     6c4:	08 95       	ret
     6c6:	82 b1       	in	r24, 0x02	; 2
     6c8:	80 62       	ori	r24, 0x20	; 32
     6ca:	82 b9       	out	0x02, r24	; 2
     6cc:	10 92 c8 03 	sts	0x03C8, r1	; 0x8003c8 <vertical_axis+0x10>
     6d0:	08 95       	ret

000006d2 <stepper_init>:
     6d2:	84 b1       	in	r24, 0x04	; 4
     6d4:	80 62       	ori	r24, 0x20	; 32
     6d6:	84 b9       	out	0x04, r24	; 4
     6d8:	81 b1       	in	r24, 0x01	; 1
     6da:	81 60       	ori	r24, 0x01	; 1
     6dc:	81 b9       	out	0x01, r24	; 1
     6de:	81 b1       	in	r24, 0x01	; 1
     6e0:	82 60       	ori	r24, 0x02	; 2
     6e2:	81 b9       	out	0x01, r24	; 1
     6e4:	84 b1       	in	r24, 0x04	; 4
     6e6:	80 64       	ori	r24, 0x40	; 64
     6e8:	84 b9       	out	0x04, r24	; 4
     6ea:	81 b1       	in	r24, 0x01	; 1
     6ec:	84 60       	ori	r24, 0x04	; 4
     6ee:	81 b9       	out	0x01, r24	; 1
     6f0:	81 b1       	in	r24, 0x01	; 1
     6f2:	88 60       	ori	r24, 0x08	; 8
     6f4:	81 b9       	out	0x01, r24	; 1
     6f6:	8d b1       	in	r24, 0x0d	; 13
     6f8:	88 60       	ori	r24, 0x08	; 8
     6fa:	8d b9       	out	0x0d, r24	; 13
     6fc:	81 b1       	in	r24, 0x01	; 1
     6fe:	80 61       	ori	r24, 0x10	; 16
     700:	81 b9       	out	0x01, r24	; 1
     702:	81 b1       	in	r24, 0x01	; 1
     704:	80 62       	ori	r24, 0x20	; 32
     706:	81 b9       	out	0x01, r24	; 1
     708:	e9 ec       	ldi	r30, 0xC9	; 201
     70a:	f3 e0       	ldi	r31, 0x03	; 3
     70c:	80 e1       	ldi	r24, 0x10	; 16
     70e:	97 e2       	ldi	r25, 0x27	; 39
     710:	93 87       	std	Z+11, r25	; 0x0b
     712:	82 87       	std	Z+10, r24	; 0x0a
     714:	80 ed       	ldi	r24, 0xD0	; 208
     716:	97 e0       	ldi	r25, 0x07	; 7
     718:	95 87       	std	Z+13, r25	; 0x0d
     71a:	84 87       	std	Z+12, r24	; 0x0c
     71c:	84 e6       	ldi	r24, 0x64	; 100
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	91 87       	std	Z+9, r25	; 0x09
     722:	80 87       	std	Z+8, r24	; 0x08
     724:	16 86       	std	Z+14, r1	; 0x0e
     726:	e8 eb       	ldi	r30, 0xB8	; 184
     728:	f3 e0       	ldi	r31, 0x03	; 3
     72a:	20 ee       	ldi	r18, 0xE0	; 224
     72c:	3e e2       	ldi	r19, 0x2E	; 46
     72e:	33 87       	std	Z+11, r19	; 0x0b
     730:	22 87       	std	Z+10, r18	; 0x0a
     732:	28 ee       	ldi	r18, 0xE8	; 232
     734:	33 e0       	ldi	r19, 0x03	; 3
     736:	35 87       	std	Z+13, r19	; 0x0d
     738:	24 87       	std	Z+12, r18	; 0x0c
     73a:	91 87       	std	Z+9, r25	; 0x09
     73c:	80 87       	std	Z+8, r24	; 0x08
     73e:	16 86       	std	Z+14, r1	; 0x0e
     740:	60 e0       	ldi	r22, 0x00	; 0
     742:	80 e0       	ldi	r24, 0x00	; 0
     744:	a9 df       	rcall	.-174    	; 0x698 <stepper_enable_motors>
     746:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
     74a:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
     74e:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
     752:	10 92 91 00 	sts	0x0091, r1	; 0x800091 <__TEXT_REGION_LENGTH__+0x7c0091>
     756:	08 95       	ret

00000758 <stepper_stop_all>:
     758:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
     75c:	10 92 91 00 	sts	0x0091, r1	; 0x800091 <__TEXT_REGION_LENGTH__+0x7c0091>
     760:	ef e6       	ldi	r30, 0x6F	; 111
     762:	f0 e0       	ldi	r31, 0x00	; 0
     764:	80 81       	ld	r24, Z
     766:	8d 7f       	andi	r24, 0xFD	; 253
     768:	80 83       	st	Z, r24
     76a:	e1 e7       	ldi	r30, 0x71	; 113
     76c:	f0 e0       	ldi	r31, 0x00	; 0
     76e:	80 81       	ld	r24, Z
     770:	8d 7f       	andi	r24, 0xFD	; 253
     772:	80 83       	st	Z, r24
     774:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <horizontal_axis+0xe>
     778:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <vertical_axis+0xe>
     77c:	10 92 b7 03 	sts	0x03B7, r1	; 0x8003b7 <timer1_active>
     780:	10 92 b6 03 	sts	0x03B6, r1	; 0x8003b6 <__data_end>
     784:	08 95       	ret

00000786 <stepper_move_absolute>:
     786:	8f 92       	push	r8
     788:	9f 92       	push	r9
     78a:	af 92       	push	r10
     78c:	bf 92       	push	r11
     78e:	cf 92       	push	r12
     790:	df 92       	push	r13
     792:	ef 92       	push	r14
     794:	ff 92       	push	r15
     796:	4b 01       	movw	r8, r22
     798:	5c 01       	movw	r10, r24
     79a:	69 01       	movw	r12, r18
     79c:	7a 01       	movw	r14, r20
     79e:	dc df       	rcall	.-72     	; 0x758 <stepper_stop_all>
     7a0:	e9 ec       	ldi	r30, 0xC9	; 201
     7a2:	f3 e0       	ldi	r31, 0x03	; 3
     7a4:	84 82       	std	Z+4, r8	; 0x04
     7a6:	95 82       	std	Z+5, r9	; 0x05
     7a8:	a6 82       	std	Z+6, r10	; 0x06
     7aa:	b7 82       	std	Z+7, r11	; 0x07
     7ac:	c0 92 bc 03 	sts	0x03BC, r12	; 0x8003bc <vertical_axis+0x4>
     7b0:	d0 92 bd 03 	sts	0x03BD, r13	; 0x8003bd <vertical_axis+0x5>
     7b4:	e0 92 be 03 	sts	0x03BE, r14	; 0x8003be <vertical_axis+0x6>
     7b8:	f0 92 bf 03 	sts	0x03BF, r15	; 0x8003bf <vertical_axis+0x7>
     7bc:	80 81       	ld	r24, Z
     7be:	91 81       	ldd	r25, Z+1	; 0x01
     7c0:	a2 81       	ldd	r26, Z+2	; 0x02
     7c2:	b3 81       	ldd	r27, Z+3	; 0x03
     7c4:	88 15       	cp	r24, r8
     7c6:	99 05       	cpc	r25, r9
     7c8:	aa 05       	cpc	r26, r10
     7ca:	bb 05       	cpc	r27, r11
     7cc:	3c f4       	brge	.+14     	; 0x7dc <stepper_move_absolute+0x56>
     7ce:	81 e0       	ldi	r24, 0x01	; 1
     7d0:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <horizontal_axis+0xf>
     7d4:	82 b1       	in	r24, 0x02	; 2
     7d6:	8a 7f       	andi	r24, 0xFA	; 250
     7d8:	82 b9       	out	0x02, r24	; 2
     7da:	0a c0       	rjmp	.+20     	; 0x7f0 <stepper_move_absolute+0x6a>
     7dc:	88 16       	cp	r8, r24
     7de:	99 06       	cpc	r9, r25
     7e0:	aa 06       	cpc	r10, r26
     7e2:	bb 06       	cpc	r11, r27
     7e4:	2c f4       	brge	.+10     	; 0x7f0 <stepper_move_absolute+0x6a>
     7e6:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <horizontal_axis+0xf>
     7ea:	82 b1       	in	r24, 0x02	; 2
     7ec:	85 60       	ori	r24, 0x05	; 5
     7ee:	82 b9       	out	0x02, r24	; 2
     7f0:	80 91 b8 03 	lds	r24, 0x03B8	; 0x8003b8 <vertical_axis>
     7f4:	90 91 b9 03 	lds	r25, 0x03B9	; 0x8003b9 <vertical_axis+0x1>
     7f8:	a0 91 ba 03 	lds	r26, 0x03BA	; 0x8003ba <vertical_axis+0x2>
     7fc:	b0 91 bb 03 	lds	r27, 0x03BB	; 0x8003bb <vertical_axis+0x3>
     800:	8c 15       	cp	r24, r12
     802:	9d 05       	cpc	r25, r13
     804:	ae 05       	cpc	r26, r14
     806:	bf 05       	cpc	r27, r15
     808:	3c f4       	brge	.+14     	; 0x818 <stepper_move_absolute+0x92>
     80a:	81 e0       	ldi	r24, 0x01	; 1
     80c:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <vertical_axis+0xf>
     810:	82 b1       	in	r24, 0x02	; 2
     812:	8f 7e       	andi	r24, 0xEF	; 239
     814:	82 b9       	out	0x02, r24	; 2
     816:	0a c0       	rjmp	.+20     	; 0x82c <stepper_move_absolute+0xa6>
     818:	c8 16       	cp	r12, r24
     81a:	d9 06       	cpc	r13, r25
     81c:	ea 06       	cpc	r14, r26
     81e:	fb 06       	cpc	r15, r27
     820:	2c f4       	brge	.+10     	; 0x82c <stepper_move_absolute+0xa6>
     822:	10 92 c7 03 	sts	0x03C7, r1	; 0x8003c7 <vertical_axis+0xf>
     826:	82 b1       	in	r24, 0x02	; 2
     828:	80 61       	ori	r24, 0x10	; 16
     82a:	82 b9       	out	0x02, r24	; 2
     82c:	80 91 c9 03 	lds	r24, 0x03C9	; 0x8003c9 <horizontal_axis>
     830:	90 91 ca 03 	lds	r25, 0x03CA	; 0x8003ca <horizontal_axis+0x1>
     834:	a0 91 cb 03 	lds	r26, 0x03CB	; 0x8003cb <horizontal_axis+0x2>
     838:	b0 91 cc 03 	lds	r27, 0x03CC	; 0x8003cc <horizontal_axis+0x3>
     83c:	88 16       	cp	r8, r24
     83e:	99 06       	cpc	r9, r25
     840:	aa 06       	cpc	r10, r26
     842:	bb 06       	cpc	r11, r27
     844:	59 f0       	breq	.+22     	; 0x85c <stepper_move_absolute+0xd6>
     846:	80 91 d9 03 	lds	r24, 0x03D9	; 0x8003d9 <horizontal_axis+0x10>
     84a:	88 23       	and	r24, r24
     84c:	39 f0       	breq	.+14     	; 0x85c <stepper_move_absolute+0xd6>
     84e:	e9 ec       	ldi	r30, 0xC9	; 201
     850:	f3 e0       	ldi	r31, 0x03	; 3
     852:	81 e0       	ldi	r24, 0x01	; 1
     854:	86 87       	std	Z+14, r24	; 0x0e
     856:	82 85       	ldd	r24, Z+10	; 0x0a
     858:	93 85       	ldd	r25, Z+11	; 0x0b
     85a:	38 de       	rcall	.-912    	; 0x4cc <start_horizontal_movement>
     85c:	80 91 b8 03 	lds	r24, 0x03B8	; 0x8003b8 <vertical_axis>
     860:	90 91 b9 03 	lds	r25, 0x03B9	; 0x8003b9 <vertical_axis+0x1>
     864:	a0 91 ba 03 	lds	r26, 0x03BA	; 0x8003ba <vertical_axis+0x2>
     868:	b0 91 bb 03 	lds	r27, 0x03BB	; 0x8003bb <vertical_axis+0x3>
     86c:	c8 16       	cp	r12, r24
     86e:	d9 06       	cpc	r13, r25
     870:	ea 06       	cpc	r14, r26
     872:	fb 06       	cpc	r15, r27
     874:	59 f0       	breq	.+22     	; 0x88c <stepper_move_absolute+0x106>
     876:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <vertical_axis+0x10>
     87a:	88 23       	and	r24, r24
     87c:	39 f0       	breq	.+14     	; 0x88c <stepper_move_absolute+0x106>
     87e:	e8 eb       	ldi	r30, 0xB8	; 184
     880:	f3 e0       	ldi	r31, 0x03	; 3
     882:	81 e0       	ldi	r24, 0x01	; 1
     884:	86 87       	std	Z+14, r24	; 0x0e
     886:	82 85       	ldd	r24, Z+10	; 0x0a
     888:	93 85       	ldd	r25, Z+11	; 0x0b
     88a:	3a de       	rcall	.-908    	; 0x500 <start_vertical_movement>
     88c:	ff 90       	pop	r15
     88e:	ef 90       	pop	r14
     890:	df 90       	pop	r13
     892:	cf 90       	pop	r12
     894:	bf 90       	pop	r11
     896:	af 90       	pop	r10
     898:	9f 90       	pop	r9
     89a:	8f 90       	pop	r8
     89c:	08 95       	ret

0000089e <stepper_move_relative>:
     89e:	8f 92       	push	r8
     8a0:	9f 92       	push	r9
     8a2:	af 92       	push	r10
     8a4:	bf 92       	push	r11
     8a6:	cf 92       	push	r12
     8a8:	df 92       	push	r13
     8aa:	ef 92       	push	r14
     8ac:	ff 92       	push	r15
     8ae:	80 90 b8 03 	lds	r8, 0x03B8	; 0x8003b8 <vertical_axis>
     8b2:	90 90 b9 03 	lds	r9, 0x03B9	; 0x8003b9 <vertical_axis+0x1>
     8b6:	a0 90 ba 03 	lds	r10, 0x03BA	; 0x8003ba <vertical_axis+0x2>
     8ba:	b0 90 bb 03 	lds	r11, 0x03BB	; 0x8003bb <vertical_axis+0x3>
     8be:	c0 90 c9 03 	lds	r12, 0x03C9	; 0x8003c9 <horizontal_axis>
     8c2:	d0 90 ca 03 	lds	r13, 0x03CA	; 0x8003ca <horizontal_axis+0x1>
     8c6:	e0 90 cb 03 	lds	r14, 0x03CB	; 0x8003cb <horizontal_axis+0x2>
     8ca:	f0 90 cc 03 	lds	r15, 0x03CC	; 0x8003cc <horizontal_axis+0x3>
     8ce:	28 0d       	add	r18, r8
     8d0:	39 1d       	adc	r19, r9
     8d2:	4a 1d       	adc	r20, r10
     8d4:	5b 1d       	adc	r21, r11
     8d6:	6c 0d       	add	r22, r12
     8d8:	7d 1d       	adc	r23, r13
     8da:	8e 1d       	adc	r24, r14
     8dc:	9f 1d       	adc	r25, r15
     8de:	53 df       	rcall	.-346    	; 0x786 <stepper_move_absolute>
     8e0:	ff 90       	pop	r15
     8e2:	ef 90       	pop	r14
     8e4:	df 90       	pop	r13
     8e6:	cf 90       	pop	r12
     8e8:	bf 90       	pop	r11
     8ea:	af 90       	pop	r10
     8ec:	9f 90       	pop	r9
     8ee:	8f 90       	pop	r8
     8f0:	08 95       	ret

000008f2 <stepper_debug_info>:
}

void stepper_debug_info(void) {
     8f2:	ff 92       	push	r15
     8f4:	0f 93       	push	r16
     8f6:	1f 93       	push	r17
     8f8:	cf 93       	push	r28
     8fa:	df 93       	push	r29
     8fc:	cd b7       	in	r28, 0x3d	; 61
     8fe:	de b7       	in	r29, 0x3e	; 62
     900:	c4 56       	subi	r28, 0x64	; 100
     902:	d1 09       	sbc	r29, r1
     904:	0f b6       	in	r0, 0x3f	; 63
     906:	f8 94       	cli
     908:	de bf       	out	0x3e, r29	; 62
     90a:	0f be       	out	0x3f, r0	; 63
     90c:	cd bf       	out	0x3d, r28	; 61
	char debug_msg[100];
	
	snprintf(debug_msg, sizeof(debug_msg), "STEPS_PER_MM_H: %d", (int)STEPS_PER_MM_H);
     90e:	1f 92       	push	r1
     910:	80 e5       	ldi	r24, 0x50	; 80
     912:	8f 93       	push	r24
     914:	85 ec       	ldi	r24, 0xC5	; 197
     916:	92 e0       	ldi	r25, 0x02	; 2
     918:	9f 93       	push	r25
     91a:	8f 93       	push	r24
     91c:	1f 92       	push	r1
     91e:	0f 2e       	mov	r0, r31
     920:	f4 e6       	ldi	r31, 0x64	; 100
     922:	ff 2e       	mov	r15, r31
     924:	f0 2d       	mov	r31, r0
     926:	ff 92       	push	r15
     928:	8e 01       	movw	r16, r28
     92a:	0f 5f       	subi	r16, 0xFF	; 255
     92c:	1f 4f       	sbci	r17, 0xFF	; 255
     92e:	1f 93       	push	r17
     930:	0f 93       	push	r16
     932:	6f d3       	rcall	.+1758   	; 0x1012 <snprintf>
	uart_send_response(debug_msg);
     934:	c8 01       	movw	r24, r16
     936:	42 d1       	rcall	.+644    	; 0xbbc <uart_send_response>
	
	snprintf(debug_msg, sizeof(debug_msg), "STEPS_PER_MM_V: %d", (int)STEPS_PER_MM_V);
     938:	81 e0       	ldi	r24, 0x01	; 1
     93a:	8f 93       	push	r24
     93c:	80 e9       	ldi	r24, 0x90	; 144
     93e:	8f 93       	push	r24
     940:	88 ed       	ldi	r24, 0xD8	; 216
     942:	92 e0       	ldi	r25, 0x02	; 2
     944:	9f 93       	push	r25
     946:	8f 93       	push	r24
     948:	1f 92       	push	r1
     94a:	ff 92       	push	r15
     94c:	1f 93       	push	r17
     94e:	0f 93       	push	r16
	uart_send_response(debug_msg);
     950:	60 d3       	rcall	.+1728   	; 0x1012 <snprintf>
     952:	c8 01       	movw	r24, r16
     954:	33 d1       	rcall	.+614    	; 0xbbc <uart_send_response>
	
	snprintf(debug_msg, sizeof(debug_msg), "POS_H: %ld, POS_V: %ld",
     956:	e8 eb       	ldi	r30, 0xB8	; 184
     958:	f3 e0       	ldi	r31, 0x03	; 3
     95a:	83 81       	ldd	r24, Z+3	; 0x03
     95c:	8f 93       	push	r24
     95e:	82 81       	ldd	r24, Z+2	; 0x02
     960:	8f 93       	push	r24
     962:	81 81       	ldd	r24, Z+1	; 0x01
     964:	8f 93       	push	r24
     966:	80 81       	ld	r24, Z
     968:	8f 93       	push	r24
     96a:	e9 ec       	ldi	r30, 0xC9	; 201
     96c:	f3 e0       	ldi	r31, 0x03	; 3
     96e:	83 81       	ldd	r24, Z+3	; 0x03
     970:	8f 93       	push	r24
     972:	82 81       	ldd	r24, Z+2	; 0x02
     974:	8f 93       	push	r24
     976:	81 81       	ldd	r24, Z+1	; 0x01
     978:	8f 93       	push	r24
     97a:	80 81       	ld	r24, Z
     97c:	8f 93       	push	r24
     97e:	8b ee       	ldi	r24, 0xEB	; 235
     980:	92 e0       	ldi	r25, 0x02	; 2
     982:	9f 93       	push	r25
     984:	8f 93       	push	r24
     986:	1f 92       	push	r1
     988:	ff 92       	push	r15
     98a:	1f 93       	push	r17
     98c:	0f 93       	push	r16
	horizontal_axis.current_position, vertical_axis.current_position);
	uart_send_response(debug_msg);
     98e:	41 d3       	rcall	.+1666   	; 0x1012 <snprintf>
     990:	c8 01       	movw	r24, r16
     992:	14 d1       	rcall	.+552    	; 0xbbc <uart_send_response>
}
     994:	0f b6       	in	r0, 0x3f	; 63
     996:	f8 94       	cli
     998:	de bf       	out	0x3e, r29	; 62
     99a:	0f be       	out	0x3f, r0	; 63
     99c:	cd bf       	out	0x3d, r28	; 61
     99e:	cc 59       	subi	r28, 0x9C	; 156
     9a0:	df 4f       	sbci	r29, 0xFF	; 255
     9a2:	0f b6       	in	r0, 0x3f	; 63
     9a4:	f8 94       	cli
     9a6:	de bf       	out	0x3e, r29	; 62
     9a8:	0f be       	out	0x3f, r0	; 63
     9aa:	cd bf       	out	0x3d, r28	; 61
     9ac:	df 91       	pop	r29
     9ae:	cf 91       	pop	r28
     9b0:	1f 91       	pop	r17
     9b2:	0f 91       	pop	r16
     9b4:	ff 90       	pop	r15
     9b6:	08 95       	ret

000009b8 <stepper_debug_motor_state>:

void stepper_debug_motor_state(void) {
     9b8:	ff 92       	push	r15
     9ba:	0f 93       	push	r16
     9bc:	1f 93       	push	r17
     9be:	cf 93       	push	r28
     9c0:	df 93       	push	r29
     9c2:	cd b7       	in	r28, 0x3d	; 61
     9c4:	de b7       	in	r29, 0x3e	; 62
     9c6:	c4 56       	subi	r28, 0x64	; 100
     9c8:	d1 09       	sbc	r29, r1
     9ca:	0f b6       	in	r0, 0x3f	; 63
     9cc:	f8 94       	cli
     9ce:	de bf       	out	0x3e, r29	; 62
     9d0:	0f be       	out	0x3f, r0	; 63
     9d2:	cd bf       	out	0x3d, r28	; 61
	char debug_msg[100];
	
	snprintf(debug_msg, sizeof(debug_msg), "H_ENABLED: %s, V_ENABLED: %s",
	horizontal_axis.enabled ? "YES" : "NO",
	vertical_axis.enabled ? "YES" : "NO");
     9d4:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <vertical_axis+0x10>
}

void stepper_debug_motor_state(void) {
	char debug_msg[100];
	
	snprintf(debug_msg, sizeof(debug_msg), "H_ENABLED: %s, V_ENABLED: %s",
     9d8:	88 23       	and	r24, r24
     9da:	19 f0       	breq	.+6      	; 0x9e2 <stepper_debug_motor_state+0x2a>
     9dc:	22 e0       	ldi	r18, 0x02	; 2
     9de:	33 e0       	ldi	r19, 0x03	; 3
     9e0:	02 c0       	rjmp	.+4      	; 0x9e6 <stepper_debug_motor_state+0x2e>
     9e2:	26 e0       	ldi	r18, 0x06	; 6
     9e4:	33 e0       	ldi	r19, 0x03	; 3
	horizontal_axis.enabled ? "YES" : "NO",
     9e6:	80 91 d9 03 	lds	r24, 0x03D9	; 0x8003d9 <horizontal_axis+0x10>
}

void stepper_debug_motor_state(void) {
	char debug_msg[100];
	
	snprintf(debug_msg, sizeof(debug_msg), "H_ENABLED: %s, V_ENABLED: %s",
     9ea:	88 23       	and	r24, r24
     9ec:	19 f0       	breq	.+6      	; 0x9f4 <stepper_debug_motor_state+0x3c>
     9ee:	82 e0       	ldi	r24, 0x02	; 2
     9f0:	93 e0       	ldi	r25, 0x03	; 3
     9f2:	02 c0       	rjmp	.+4      	; 0x9f8 <stepper_debug_motor_state+0x40>
     9f4:	86 e0       	ldi	r24, 0x06	; 6
     9f6:	93 e0       	ldi	r25, 0x03	; 3
     9f8:	3f 93       	push	r19
     9fa:	2f 93       	push	r18
     9fc:	9f 93       	push	r25
     9fe:	8f 93       	push	r24
     a00:	88 e1       	ldi	r24, 0x18	; 24
     a02:	93 e0       	ldi	r25, 0x03	; 3
     a04:	9f 93       	push	r25
     a06:	8f 93       	push	r24
     a08:	1f 92       	push	r1
     a0a:	0f 2e       	mov	r0, r31
     a0c:	f4 e6       	ldi	r31, 0x64	; 100
     a0e:	ff 2e       	mov	r15, r31
     a10:	f0 2d       	mov	r31, r0
     a12:	ff 92       	push	r15
     a14:	8e 01       	movw	r16, r28
     a16:	0f 5f       	subi	r16, 0xFF	; 255
     a18:	1f 4f       	sbci	r17, 0xFF	; 255
     a1a:	1f 93       	push	r17
     a1c:	0f 93       	push	r16
     a1e:	f9 d2       	rcall	.+1522   	; 0x1012 <snprintf>
	horizontal_axis.enabled ? "YES" : "NO",
	vertical_axis.enabled ? "YES" : "NO");
	uart_send_response(debug_msg);
     a20:	c8 01       	movw	r24, r16
     a22:	cc d0       	rcall	.+408    	; 0xbbc <uart_send_response>
	
	snprintf(debug_msg, sizeof(debug_msg), "H_STATE: %d, V_STATE: %d",
	horizontal_axis.state, vertical_axis.state);
     a24:	90 91 c6 03 	lds	r25, 0x03C6	; 0x8003c6 <vertical_axis+0xe>
     a28:	80 91 d7 03 	lds	r24, 0x03D7	; 0x8003d7 <horizontal_axis+0xe>
	snprintf(debug_msg, sizeof(debug_msg), "H_ENABLED: %s, V_ENABLED: %s",
	horizontal_axis.enabled ? "YES" : "NO",
	vertical_axis.enabled ? "YES" : "NO");
	uart_send_response(debug_msg);
	
	snprintf(debug_msg, sizeof(debug_msg), "H_STATE: %d, V_STATE: %d",
     a2c:	1f 92       	push	r1
     a2e:	9f 93       	push	r25
     a30:	1f 92       	push	r1
     a32:	8f 93       	push	r24
     a34:	85 e3       	ldi	r24, 0x35	; 53
     a36:	93 e0       	ldi	r25, 0x03	; 3
     a38:	9f 93       	push	r25
     a3a:	8f 93       	push	r24
     a3c:	1f 92       	push	r1
     a3e:	ff 92       	push	r15
     a40:	1f 93       	push	r17
     a42:	0f 93       	push	r16
	horizontal_axis.state, vertical_axis.state);
	uart_send_response(debug_msg);
     a44:	e6 d2       	rcall	.+1484   	; 0x1012 <snprintf>
     a46:	c8 01       	movw	r24, r16
     a48:	b9 d0       	rcall	.+370    	; 0xbbc <uart_send_response>
	
	snprintf(debug_msg, sizeof(debug_msg), "TIMER1: %s, TIMER3: %s",
	timer1_active ? "ACTIVE" : "STOPPED",
	timer3_active ? "ACTIVE" : "STOPPED");
     a4a:	80 91 b6 03 	lds	r24, 0x03B6	; 0x8003b6 <__data_end>
	
	snprintf(debug_msg, sizeof(debug_msg), "H_STATE: %d, V_STATE: %d",
	horizontal_axis.state, vertical_axis.state);
	uart_send_response(debug_msg);
	
	snprintf(debug_msg, sizeof(debug_msg), "TIMER1: %s, TIMER3: %s",
     a4e:	0f b6       	in	r0, 0x3f	; 63
     a50:	f8 94       	cli
     a52:	de bf       	out	0x3e, r29	; 62
     a54:	0f be       	out	0x3f, r0	; 63
     a56:	cd bf       	out	0x3d, r28	; 61
     a58:	88 23       	and	r24, r24
     a5a:	19 f0       	breq	.+6      	; 0xa62 <stepper_debug_motor_state+0xaa>
     a5c:	29 e0       	ldi	r18, 0x09	; 9
     a5e:	33 e0       	ldi	r19, 0x03	; 3
     a60:	02 c0       	rjmp	.+4      	; 0xa66 <stepper_debug_motor_state+0xae>
     a62:	20 e1       	ldi	r18, 0x10	; 16
     a64:	33 e0       	ldi	r19, 0x03	; 3
	timer1_active ? "ACTIVE" : "STOPPED",
     a66:	80 91 b7 03 	lds	r24, 0x03B7	; 0x8003b7 <timer1_active>
	
	snprintf(debug_msg, sizeof(debug_msg), "H_STATE: %d, V_STATE: %d",
	horizontal_axis.state, vertical_axis.state);
	uart_send_response(debug_msg);
	
	snprintf(debug_msg, sizeof(debug_msg), "TIMER1: %s, TIMER3: %s",
     a6a:	88 23       	and	r24, r24
     a6c:	19 f0       	breq	.+6      	; 0xa74 <stepper_debug_motor_state+0xbc>
     a6e:	89 e0       	ldi	r24, 0x09	; 9
     a70:	93 e0       	ldi	r25, 0x03	; 3
     a72:	02 c0       	rjmp	.+4      	; 0xa78 <stepper_debug_motor_state+0xc0>
     a74:	80 e1       	ldi	r24, 0x10	; 16
     a76:	93 e0       	ldi	r25, 0x03	; 3
     a78:	3f 93       	push	r19
     a7a:	2f 93       	push	r18
     a7c:	9f 93       	push	r25
     a7e:	8f 93       	push	r24
     a80:	8e e4       	ldi	r24, 0x4E	; 78
     a82:	93 e0       	ldi	r25, 0x03	; 3
     a84:	9f 93       	push	r25
     a86:	8f 93       	push	r24
     a88:	1f 92       	push	r1
     a8a:	84 e6       	ldi	r24, 0x64	; 100
     a8c:	8f 93       	push	r24
     a8e:	8e 01       	movw	r16, r28
     a90:	0f 5f       	subi	r16, 0xFF	; 255
     a92:	1f 4f       	sbci	r17, 0xFF	; 255
     a94:	1f 93       	push	r17
     a96:	0f 93       	push	r16
	timer1_active ? "ACTIVE" : "STOPPED",
	timer3_active ? "ACTIVE" : "STOPPED");
	uart_send_response(debug_msg);
     a98:	bc d2       	rcall	.+1400   	; 0x1012 <snprintf>
     a9a:	c8 01       	movw	r24, r16
     a9c:	8f d0       	rcall	.+286    	; 0xbbc <uart_send_response>
     a9e:	0f b6       	in	r0, 0x3f	; 63
     aa0:	f8 94       	cli
     aa2:	de bf       	out	0x3e, r29	; 62
     aa4:	0f be       	out	0x3f, r0	; 63
     aa6:	cd bf       	out	0x3d, r28	; 61
     aa8:	cc 59       	subi	r28, 0x9C	; 156
     aaa:	df 4f       	sbci	r29, 0xFF	; 255
     aac:	0f b6       	in	r0, 0x3f	; 63
     aae:	f8 94       	cli
     ab0:	de bf       	out	0x3e, r29	; 62
     ab2:	0f be       	out	0x3f, r0	; 63
     ab4:	cd bf       	out	0x3d, r28	; 61
     ab6:	df 91       	pop	r29
     ab8:	cf 91       	pop	r28
     aba:	1f 91       	pop	r17
     abc:	0f 91       	pop	r16
     abe:	ff 90       	pop	r15
     ac0:	08 95       	ret

00000ac2 <uart_init>:
	uint8_t tail = rx_buffer.tail;
	char c = rx_buffer.buffer[tail];
	rx_buffer.tail = (tail + 1) % UART_BUFFER_SIZE;
	
	return c;
}
     ac2:	cf 93       	push	r28
     ac4:	df 93       	push	r29
     ac6:	1f 92       	push	r1
     ac8:	cd b7       	in	r28, 0x3d	; 61
     aca:	de b7       	in	r29, 0x3e	; 62
     acc:	61 15       	cp	r22, r1
     ace:	22 ec       	ldi	r18, 0xC2	; 194
     ad0:	72 07       	cpc	r23, r18
     ad2:	21 e0       	ldi	r18, 0x01	; 1
     ad4:	82 07       	cpc	r24, r18
     ad6:	91 05       	cpc	r25, r1
     ad8:	d9 f4       	brne	.+54     	; 0xb10 <uart_init+0x4e>
     ada:	22 e0       	ldi	r18, 0x02	; 2
     adc:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
     ae0:	dc 01       	movw	r26, r24
     ae2:	cb 01       	movw	r24, r22
     ae4:	88 0f       	add	r24, r24
     ae6:	99 1f       	adc	r25, r25
     ae8:	aa 1f       	adc	r26, r26
     aea:	bb 1f       	adc	r27, r27
     aec:	88 0f       	add	r24, r24
     aee:	99 1f       	adc	r25, r25
     af0:	aa 1f       	adc	r26, r26
     af2:	bb 1f       	adc	r27, r27
     af4:	9c 01       	movw	r18, r24
     af6:	ad 01       	movw	r20, r26
     af8:	22 0f       	add	r18, r18
     afa:	33 1f       	adc	r19, r19
     afc:	44 1f       	adc	r20, r20
     afe:	55 1f       	adc	r21, r21
     b00:	60 e0       	ldi	r22, 0x00	; 0
     b02:	74 e2       	ldi	r23, 0x24	; 36
     b04:	84 ef       	ldi	r24, 0xF4	; 244
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	23 d2       	rcall	.+1094   	; 0xf50 <__udivmodsi4>
     b0a:	21 50       	subi	r18, 0x01	; 1
     b0c:	31 09       	sbc	r19, r1
     b0e:	1d c0       	rjmp	.+58     	; 0xb4a <uart_init+0x88>
     b10:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
     b14:	dc 01       	movw	r26, r24
     b16:	cb 01       	movw	r24, r22
     b18:	88 0f       	add	r24, r24
     b1a:	99 1f       	adc	r25, r25
     b1c:	aa 1f       	adc	r26, r26
     b1e:	bb 1f       	adc	r27, r27
     b20:	88 0f       	add	r24, r24
     b22:	99 1f       	adc	r25, r25
     b24:	aa 1f       	adc	r26, r26
     b26:	bb 1f       	adc	r27, r27
     b28:	9c 01       	movw	r18, r24
     b2a:	ad 01       	movw	r20, r26
     b2c:	22 0f       	add	r18, r18
     b2e:	33 1f       	adc	r19, r19
     b30:	44 1f       	adc	r20, r20
     b32:	55 1f       	adc	r21, r21
     b34:	22 0f       	add	r18, r18
     b36:	33 1f       	adc	r19, r19
     b38:	44 1f       	adc	r20, r20
     b3a:	55 1f       	adc	r21, r21
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	74 e2       	ldi	r23, 0x24	; 36
     b40:	84 ef       	ldi	r24, 0xF4	; 244
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	05 d2       	rcall	.+1034   	; 0xf50 <__udivmodsi4>
     b46:	21 50       	subi	r18, 0x01	; 1
     b48:	31 09       	sbc	r19, r1
     b4a:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
     b4e:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
     b52:	88 e9       	ldi	r24, 0x98	; 152
     b54:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
     b58:	86 e0       	ldi	r24, 0x06	; 6
     b5a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
     b5e:	10 92 de 04 	sts	0x04DE, r1	; 0x8004de <rx_buffer+0x80>
     b62:	10 92 df 04 	sts	0x04DF, r1	; 0x8004df <rx_buffer+0x81>
     b66:	10 92 e0 04 	sts	0x04E0, r1	; 0x8004e0 <rx_buffer+0x82>
     b6a:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <cmd_index>
     b6e:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <cmd_started>
     b72:	04 c0       	rjmp	.+8      	; 0xb7c <uart_init+0xba>
     b74:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
     b78:	89 83       	std	Y+1, r24	; 0x01
     b7a:	89 81       	ldd	r24, Y+1	; 0x01
     b7c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
     b80:	88 23       	and	r24, r24
     b82:	c4 f3       	brlt	.-16     	; 0xb74 <uart_init+0xb2>
     b84:	0f 90       	pop	r0
     b86:	df 91       	pop	r29
     b88:	cf 91       	pop	r28
     b8a:	08 95       	ret

00000b8c <uart_set_command_callback>:
     b8c:	90 93 5d 04 	sts	0x045D, r25	; 0x80045d <command_ready_callback+0x1>
     b90:	80 93 5c 04 	sts	0x045C, r24	; 0x80045c <command_ready_callback>
     b94:	08 95       	ret

00000b96 <uart_send_char>:
     b96:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
     b9a:	95 ff       	sbrs	r25, 5
     b9c:	fc cf       	rjmp	.-8      	; 0xb96 <uart_send_char>
     b9e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
     ba2:	08 95       	ret

00000ba4 <uart_send_string>:
     ba4:	cf 93       	push	r28
     ba6:	df 93       	push	r29
     ba8:	ec 01       	movw	r28, r24
     baa:	02 c0       	rjmp	.+4      	; 0xbb0 <uart_send_string+0xc>
     bac:	21 96       	adiw	r28, 0x01	; 1
     bae:	f3 df       	rcall	.-26     	; 0xb96 <uart_send_char>
     bb0:	88 81       	ld	r24, Y
     bb2:	81 11       	cpse	r24, r1
     bb4:	fb cf       	rjmp	.-10     	; 0xbac <uart_send_string+0x8>
     bb6:	df 91       	pop	r29
     bb8:	cf 91       	pop	r28
     bba:	08 95       	ret

00000bbc <uart_send_response>:
     bbc:	f3 df       	rcall	.-26     	; 0xba4 <uart_send_string>
     bbe:	85 e6       	ldi	r24, 0x65	; 101
     bc0:	93 e0       	ldi	r25, 0x03	; 3
     bc2:	f0 cf       	rjmp	.-32     	; 0xba4 <uart_send_string>
     bc4:	08 95       	ret

00000bc6 <uart_get_command>:

bool uart_get_command(char* dest, uint8_t max_len) {
     bc6:	0f 93       	push	r16
     bc8:	1f 93       	push	r17
     bca:	cf 93       	push	r28
     bcc:	df 93       	push	r29
     bce:	8c 01       	movw	r16, r24
	// En esta implementación, el comando ya está en command_buffer
	// cuando se llama el callback
	strncpy(dest, command_buffer, max_len - 1);
     bd0:	70 e0       	ldi	r23, 0x00	; 0
     bd2:	eb 01       	movw	r28, r22
     bd4:	21 97       	sbiw	r28, 0x01	; 1
     bd6:	ae 01       	movw	r20, r28
     bd8:	6c ed       	ldi	r22, 0xDC	; 220
     bda:	73 e0       	ldi	r23, 0x03	; 3
     bdc:	03 d2       	rcall	.+1030   	; 0xfe4 <strncpy>
	dest[max_len - 1] = '\0';
     bde:	c0 0f       	add	r28, r16
     be0:	d1 1f       	adc	r29, r17
     be2:	18 82       	st	Y, r1
	return true;
}
     be4:	81 e0       	ldi	r24, 0x01	; 1
     be6:	df 91       	pop	r29
     be8:	cf 91       	pop	r28
     bea:	1f 91       	pop	r17
     bec:	0f 91       	pop	r16
     bee:	08 95       	ret

00000bf0 <__vector_25>:

ISR(USART0_RX_vect) {
     bf0:	1f 92       	push	r1
     bf2:	0f 92       	push	r0
     bf4:	0f b6       	in	r0, 0x3f	; 63
     bf6:	0f 92       	push	r0
     bf8:	11 24       	eor	r1, r1
     bfa:	0b b6       	in	r0, 0x3b	; 59
     bfc:	0f 92       	push	r0
     bfe:	2f 93       	push	r18
     c00:	3f 93       	push	r19
     c02:	4f 93       	push	r20
     c04:	5f 93       	push	r21
     c06:	6f 93       	push	r22
     c08:	7f 93       	push	r23
     c0a:	8f 93       	push	r24
     c0c:	9f 93       	push	r25
     c0e:	af 93       	push	r26
     c10:	bf 93       	push	r27
     c12:	ef 93       	push	r30
     c14:	ff 93       	push	r31
	char received = UDR0;
     c16:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
	
	if (received == '<') {
     c1a:	8c 33       	cpi	r24, 0x3C	; 60
     c1c:	31 f4       	brne	.+12     	; 0xc2a <__vector_25+0x3a>
		cmd_started = true;
     c1e:	81 e0       	ldi	r24, 0x01	; 1
     c20:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <cmd_started>
		cmd_index = 0;
     c24:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <cmd_index>
     c28:	2a c0       	rjmp	.+84     	; 0xc7e <__vector_25+0x8e>
	}
	else if (received == '>' && cmd_started) {
     c2a:	8e 33       	cpi	r24, 0x3E	; 62
     c2c:	a1 f4       	brne	.+40     	; 0xc56 <__vector_25+0x66>
     c2e:	90 91 da 03 	lds	r25, 0x03DA	; 0x8003da <cmd_started>
     c32:	99 23       	and	r25, r25
     c34:	81 f0       	breq	.+32     	; 0xc56 <__vector_25+0x66>
		// Comando completo - procesar inmediatamente
		command_buffer[cmd_index] = '\0';
     c36:	e0 91 db 03 	lds	r30, 0x03DB	; 0x8003db <cmd_index>
     c3a:	f0 e0       	ldi	r31, 0x00	; 0
     c3c:	e4 52       	subi	r30, 0x24	; 36
     c3e:	fc 4f       	sbci	r31, 0xFC	; 252
     c40:	10 82       	st	Z, r1
		cmd_started = false;
     c42:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <cmd_started>
		
		// Llamar callback directamente desde ISR (será rápido)
		if (command_ready_callback) {
     c46:	e0 91 5c 04 	lds	r30, 0x045C	; 0x80045c <command_ready_callback>
     c4a:	f0 91 5d 04 	lds	r31, 0x045D	; 0x80045d <command_ready_callback+0x1>
     c4e:	30 97       	sbiw	r30, 0x00	; 0
     c50:	b1 f0       	breq	.+44     	; 0xc7e <__vector_25+0x8e>
			command_ready_callback();
     c52:	19 95       	eicall
     c54:	14 c0       	rjmp	.+40     	; 0xc7e <__vector_25+0x8e>
		}
	}
	else if (cmd_started && cmd_index < UART_BUFFER_SIZE - 1) {
     c56:	90 91 da 03 	lds	r25, 0x03DA	; 0x8003da <cmd_started>
     c5a:	99 23       	and	r25, r25
     c5c:	81 f0       	breq	.+32     	; 0xc7e <__vector_25+0x8e>
     c5e:	e0 91 db 03 	lds	r30, 0x03DB	; 0x8003db <cmd_index>
     c62:	ef 37       	cpi	r30, 0x7F	; 127
     c64:	60 f4       	brcc	.+24     	; 0xc7e <__vector_25+0x8e>
		// Solo agregar caracteres válidos (no \n, \r)
		if (received != '\n' && received != '\r') {
     c66:	8a 30       	cpi	r24, 0x0A	; 10
     c68:	51 f0       	breq	.+20     	; 0xc7e <__vector_25+0x8e>
     c6a:	8d 30       	cpi	r24, 0x0D	; 13
     c6c:	41 f0       	breq	.+16     	; 0xc7e <__vector_25+0x8e>
			command_buffer[cmd_index++] = received;
     c6e:	91 e0       	ldi	r25, 0x01	; 1
     c70:	9e 0f       	add	r25, r30
     c72:	90 93 db 03 	sts	0x03DB, r25	; 0x8003db <cmd_index>
     c76:	f0 e0       	ldi	r31, 0x00	; 0
     c78:	e4 52       	subi	r30, 0x24	; 36
     c7a:	fc 4f       	sbci	r31, 0xFC	; 252
     c7c:	80 83       	st	Z, r24
		}
	}
	
	// Si hay overflow, resetear
	if (cmd_index >= UART_BUFFER_SIZE - 1) {
     c7e:	80 91 db 03 	lds	r24, 0x03DB	; 0x8003db <cmd_index>
     c82:	8f 37       	cpi	r24, 0x7F	; 127
     c84:	20 f0       	brcs	.+8      	; 0xc8e <__vector_25+0x9e>
		cmd_started = false;
     c86:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <cmd_started>
		cmd_index = 0;
     c8a:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <cmd_index>
	}
}
     c8e:	ff 91       	pop	r31
     c90:	ef 91       	pop	r30
     c92:	bf 91       	pop	r27
     c94:	af 91       	pop	r26
     c96:	9f 91       	pop	r25
     c98:	8f 91       	pop	r24
     c9a:	7f 91       	pop	r23
     c9c:	6f 91       	pop	r22
     c9e:	5f 91       	pop	r21
     ca0:	4f 91       	pop	r20
     ca2:	3f 91       	pop	r19
     ca4:	2f 91       	pop	r18
     ca6:	0f 90       	pop	r0
     ca8:	0b be       	out	0x3b, r0	; 59
     caa:	0f 90       	pop	r0
     cac:	0f be       	out	0x3f, r0	; 63
     cae:	0f 90       	pop	r0
     cb0:	1f 90       	pop	r1
     cb2:	18 95       	reti

00000cb4 <on_uart_command_ready>:
#include "command/command_parser.h"
#include "config/system_config.h"
#include "drivers/stepper_driver.h"
#include <avr/interrupt.h>

static void on_uart_command_ready(void) {
     cb4:	cf 93       	push	r28
     cb6:	df 93       	push	r29
     cb8:	cd b7       	in	r28, 0x3d	; 61
     cba:	de b7       	in	r29, 0x3e	; 62
     cbc:	c0 58       	subi	r28, 0x80	; 128
     cbe:	d1 09       	sbc	r29, r1
     cc0:	0f b6       	in	r0, 0x3f	; 63
     cc2:	f8 94       	cli
     cc4:	de bf       	out	0x3e, r29	; 62
     cc6:	0f be       	out	0x3f, r0	; 63
     cc8:	cd bf       	out	0x3d, r28	; 61
	char cmd[UART_BUFFER_SIZE];
	if (uart_get_command(cmd, sizeof(cmd))) {
     cca:	60 e8       	ldi	r22, 0x80	; 128
     ccc:	ce 01       	movw	r24, r28
     cce:	01 96       	adiw	r24, 0x01	; 1
     cd0:	7a df       	rcall	.-268    	; 0xbc6 <uart_get_command>
     cd2:	88 23       	and	r24, r24
     cd4:	19 f0       	breq	.+6      	; 0xcdc <on_uart_command_ready+0x28>
		uart_parse_command(cmd);
     cd6:	ce 01       	movw	r24, r28
     cd8:	01 96       	adiw	r24, 0x01	; 1
     cda:	65 da       	rcall	.-2870   	; 0x1a6 <uart_parse_command>
	}
}
     cdc:	c0 58       	subi	r28, 0x80	; 128
     cde:	df 4f       	sbci	r29, 0xFF	; 255
     ce0:	0f b6       	in	r0, 0x3f	; 63
     ce2:	f8 94       	cli
     ce4:	de bf       	out	0x3e, r29	; 62
     ce6:	0f be       	out	0x3f, r0	; 63
     ce8:	cd bf       	out	0x3d, r28	; 61
     cea:	df 91       	pop	r29
     cec:	cf 91       	pop	r28
     cee:	08 95       	ret

00000cf0 <main>:

int main(void)
{
	uart_init(UART_BAUD_RATE);
     cf0:	60 e0       	ldi	r22, 0x00	; 0
     cf2:	72 ec       	ldi	r23, 0xC2	; 194
     cf4:	81 e0       	ldi	r24, 0x01	; 1
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	e4 de       	rcall	.-568    	; 0xac2 <uart_init>
	stepper_init();
     cfa:	eb dc       	rcall	.-1578   	; 0x6d2 <stepper_init>
     cfc:	8a e5       	ldi	r24, 0x5A	; 90
	uart_set_command_callback(on_uart_command_ready);
     cfe:	96 e0       	ldi	r25, 0x06	; 6
     d00:	45 df       	rcall	.-374    	; 0xb8c <uart_set_command_callback>
     d02:	78 94       	sei
	sei();
	
	uart_send_response("SYSTEM_READY");
     d04:	89 ea       	ldi	r24, 0xA9	; 169
     d06:	93 e0       	ldi	r25, 0x03	; 3
     d08:	59 df       	rcall	.-334    	; 0xbbc <uart_send_response>
     d0a:	ff cf       	rjmp	.-2      	; 0xd0a <main+0x1a>

00000d0c <__fixsfsi>:
     d0c:	04 d0       	rcall	.+8      	; 0xd16 <__fixunssfsi>
     d0e:	68 94       	set
     d10:	b1 11       	cpse	r27, r1
     d12:	8d c0       	rjmp	.+282    	; 0xe2e <__fp_szero>
     d14:	08 95       	ret

00000d16 <__fixunssfsi>:
     d16:	70 d0       	rcall	.+224    	; 0xdf8 <__fp_splitA>
     d18:	88 f0       	brcs	.+34     	; 0xd3c <__fixunssfsi+0x26>
     d1a:	9f 57       	subi	r25, 0x7F	; 127
     d1c:	90 f0       	brcs	.+36     	; 0xd42 <__fixunssfsi+0x2c>
     d1e:	b9 2f       	mov	r27, r25
     d20:	99 27       	eor	r25, r25
     d22:	b7 51       	subi	r27, 0x17	; 23
     d24:	a0 f0       	brcs	.+40     	; 0xd4e <__fixunssfsi+0x38>
     d26:	d1 f0       	breq	.+52     	; 0xd5c <__fixunssfsi+0x46>
     d28:	66 0f       	add	r22, r22
     d2a:	77 1f       	adc	r23, r23
     d2c:	88 1f       	adc	r24, r24
     d2e:	99 1f       	adc	r25, r25
     d30:	1a f0       	brmi	.+6      	; 0xd38 <__fixunssfsi+0x22>
     d32:	ba 95       	dec	r27
     d34:	c9 f7       	brne	.-14     	; 0xd28 <__fixunssfsi+0x12>
     d36:	12 c0       	rjmp	.+36     	; 0xd5c <__fixunssfsi+0x46>
     d38:	b1 30       	cpi	r27, 0x01	; 1
     d3a:	81 f0       	breq	.+32     	; 0xd5c <__fixunssfsi+0x46>
     d3c:	77 d0       	rcall	.+238    	; 0xe2c <__fp_zero>
     d3e:	b1 e0       	ldi	r27, 0x01	; 1
     d40:	08 95       	ret
     d42:	74 c0       	rjmp	.+232    	; 0xe2c <__fp_zero>
     d44:	67 2f       	mov	r22, r23
     d46:	78 2f       	mov	r23, r24
     d48:	88 27       	eor	r24, r24
     d4a:	b8 5f       	subi	r27, 0xF8	; 248
     d4c:	39 f0       	breq	.+14     	; 0xd5c <__fixunssfsi+0x46>
     d4e:	b9 3f       	cpi	r27, 0xF9	; 249
     d50:	cc f3       	brlt	.-14     	; 0xd44 <__fixunssfsi+0x2e>
     d52:	86 95       	lsr	r24
     d54:	77 95       	ror	r23
     d56:	67 95       	ror	r22
     d58:	b3 95       	inc	r27
     d5a:	d9 f7       	brne	.-10     	; 0xd52 <__fixunssfsi+0x3c>
     d5c:	3e f4       	brtc	.+14     	; 0xd6c <__fixunssfsi+0x56>
     d5e:	90 95       	com	r25
     d60:	80 95       	com	r24
     d62:	70 95       	com	r23
     d64:	61 95       	neg	r22
     d66:	7f 4f       	sbci	r23, 0xFF	; 255
     d68:	8f 4f       	sbci	r24, 0xFF	; 255
     d6a:	9f 4f       	sbci	r25, 0xFF	; 255
     d6c:	08 95       	ret

00000d6e <__floatunsisf>:
     d6e:	e8 94       	clt
     d70:	09 c0       	rjmp	.+18     	; 0xd84 <__floatsisf+0x12>

00000d72 <__floatsisf>:
     d72:	97 fb       	bst	r25, 7
     d74:	3e f4       	brtc	.+14     	; 0xd84 <__floatsisf+0x12>
     d76:	90 95       	com	r25
     d78:	80 95       	com	r24
     d7a:	70 95       	com	r23
     d7c:	61 95       	neg	r22
     d7e:	7f 4f       	sbci	r23, 0xFF	; 255
     d80:	8f 4f       	sbci	r24, 0xFF	; 255
     d82:	9f 4f       	sbci	r25, 0xFF	; 255
     d84:	99 23       	and	r25, r25
     d86:	a9 f0       	breq	.+42     	; 0xdb2 <__floatsisf+0x40>
     d88:	f9 2f       	mov	r31, r25
     d8a:	96 e9       	ldi	r25, 0x96	; 150
     d8c:	bb 27       	eor	r27, r27
     d8e:	93 95       	inc	r25
     d90:	f6 95       	lsr	r31
     d92:	87 95       	ror	r24
     d94:	77 95       	ror	r23
     d96:	67 95       	ror	r22
     d98:	b7 95       	ror	r27
     d9a:	f1 11       	cpse	r31, r1
     d9c:	f8 cf       	rjmp	.-16     	; 0xd8e <__floatsisf+0x1c>
     d9e:	fa f4       	brpl	.+62     	; 0xdde <__floatsisf+0x6c>
     da0:	bb 0f       	add	r27, r27
     da2:	11 f4       	brne	.+4      	; 0xda8 <__floatsisf+0x36>
     da4:	60 ff       	sbrs	r22, 0
     da6:	1b c0       	rjmp	.+54     	; 0xdde <__floatsisf+0x6c>
     da8:	6f 5f       	subi	r22, 0xFF	; 255
     daa:	7f 4f       	sbci	r23, 0xFF	; 255
     dac:	8f 4f       	sbci	r24, 0xFF	; 255
     dae:	9f 4f       	sbci	r25, 0xFF	; 255
     db0:	16 c0       	rjmp	.+44     	; 0xdde <__floatsisf+0x6c>
     db2:	88 23       	and	r24, r24
     db4:	11 f0       	breq	.+4      	; 0xdba <__floatsisf+0x48>
     db6:	96 e9       	ldi	r25, 0x96	; 150
     db8:	11 c0       	rjmp	.+34     	; 0xddc <__floatsisf+0x6a>
     dba:	77 23       	and	r23, r23
     dbc:	21 f0       	breq	.+8      	; 0xdc6 <__floatsisf+0x54>
     dbe:	9e e8       	ldi	r25, 0x8E	; 142
     dc0:	87 2f       	mov	r24, r23
     dc2:	76 2f       	mov	r23, r22
     dc4:	05 c0       	rjmp	.+10     	; 0xdd0 <__floatsisf+0x5e>
     dc6:	66 23       	and	r22, r22
     dc8:	71 f0       	breq	.+28     	; 0xde6 <__floatsisf+0x74>
     dca:	96 e8       	ldi	r25, 0x86	; 134
     dcc:	86 2f       	mov	r24, r22
     dce:	70 e0       	ldi	r23, 0x00	; 0
     dd0:	60 e0       	ldi	r22, 0x00	; 0
     dd2:	2a f0       	brmi	.+10     	; 0xdde <__floatsisf+0x6c>
     dd4:	9a 95       	dec	r25
     dd6:	66 0f       	add	r22, r22
     dd8:	77 1f       	adc	r23, r23
     dda:	88 1f       	adc	r24, r24
     ddc:	da f7       	brpl	.-10     	; 0xdd4 <__floatsisf+0x62>
     dde:	88 0f       	add	r24, r24
     de0:	96 95       	lsr	r25
     de2:	87 95       	ror	r24
     de4:	97 f9       	bld	r25, 7
     de6:	08 95       	ret

00000de8 <__fp_split3>:
     de8:	57 fd       	sbrc	r21, 7
     dea:	90 58       	subi	r25, 0x80	; 128
     dec:	44 0f       	add	r20, r20
     dee:	55 1f       	adc	r21, r21
     df0:	59 f0       	breq	.+22     	; 0xe08 <__fp_splitA+0x10>
     df2:	5f 3f       	cpi	r21, 0xFF	; 255
     df4:	71 f0       	breq	.+28     	; 0xe12 <__fp_splitA+0x1a>
     df6:	47 95       	ror	r20

00000df8 <__fp_splitA>:
     df8:	88 0f       	add	r24, r24
     dfa:	97 fb       	bst	r25, 7
     dfc:	99 1f       	adc	r25, r25
     dfe:	61 f0       	breq	.+24     	; 0xe18 <__fp_splitA+0x20>
     e00:	9f 3f       	cpi	r25, 0xFF	; 255
     e02:	79 f0       	breq	.+30     	; 0xe22 <__fp_splitA+0x2a>
     e04:	87 95       	ror	r24
     e06:	08 95       	ret
     e08:	12 16       	cp	r1, r18
     e0a:	13 06       	cpc	r1, r19
     e0c:	14 06       	cpc	r1, r20
     e0e:	55 1f       	adc	r21, r21
     e10:	f2 cf       	rjmp	.-28     	; 0xdf6 <__fp_split3+0xe>
     e12:	46 95       	lsr	r20
     e14:	f1 df       	rcall	.-30     	; 0xdf8 <__fp_splitA>
     e16:	08 c0       	rjmp	.+16     	; 0xe28 <__fp_splitA+0x30>
     e18:	16 16       	cp	r1, r22
     e1a:	17 06       	cpc	r1, r23
     e1c:	18 06       	cpc	r1, r24
     e1e:	99 1f       	adc	r25, r25
     e20:	f1 cf       	rjmp	.-30     	; 0xe04 <__fp_splitA+0xc>
     e22:	86 95       	lsr	r24
     e24:	71 05       	cpc	r23, r1
     e26:	61 05       	cpc	r22, r1
     e28:	08 94       	sec
     e2a:	08 95       	ret

00000e2c <__fp_zero>:
     e2c:	e8 94       	clt

00000e2e <__fp_szero>:
     e2e:	bb 27       	eor	r27, r27
     e30:	66 27       	eor	r22, r22
     e32:	77 27       	eor	r23, r23
     e34:	cb 01       	movw	r24, r22
     e36:	97 f9       	bld	r25, 7
     e38:	08 95       	ret

00000e3a <__mulsf3>:
     e3a:	0b d0       	rcall	.+22     	; 0xe52 <__mulsf3x>
     e3c:	78 c0       	rjmp	.+240    	; 0xf2e <__fp_round>
     e3e:	69 d0       	rcall	.+210    	; 0xf12 <__fp_pscA>
     e40:	28 f0       	brcs	.+10     	; 0xe4c <__mulsf3+0x12>
     e42:	6e d0       	rcall	.+220    	; 0xf20 <__fp_pscB>
     e44:	18 f0       	brcs	.+6      	; 0xe4c <__mulsf3+0x12>
     e46:	95 23       	and	r25, r21
     e48:	09 f0       	breq	.+2      	; 0xe4c <__mulsf3+0x12>
     e4a:	5a c0       	rjmp	.+180    	; 0xf00 <__fp_inf>
     e4c:	5f c0       	rjmp	.+190    	; 0xf0c <__fp_nan>
     e4e:	11 24       	eor	r1, r1
     e50:	ee cf       	rjmp	.-36     	; 0xe2e <__fp_szero>

00000e52 <__mulsf3x>:
     e52:	ca df       	rcall	.-108    	; 0xde8 <__fp_split3>
     e54:	a0 f3       	brcs	.-24     	; 0xe3e <__mulsf3+0x4>

00000e56 <__mulsf3_pse>:
     e56:	95 9f       	mul	r25, r21
     e58:	d1 f3       	breq	.-12     	; 0xe4e <__mulsf3+0x14>
     e5a:	95 0f       	add	r25, r21
     e5c:	50 e0       	ldi	r21, 0x00	; 0
     e5e:	55 1f       	adc	r21, r21
     e60:	62 9f       	mul	r22, r18
     e62:	f0 01       	movw	r30, r0
     e64:	72 9f       	mul	r23, r18
     e66:	bb 27       	eor	r27, r27
     e68:	f0 0d       	add	r31, r0
     e6a:	b1 1d       	adc	r27, r1
     e6c:	63 9f       	mul	r22, r19
     e6e:	aa 27       	eor	r26, r26
     e70:	f0 0d       	add	r31, r0
     e72:	b1 1d       	adc	r27, r1
     e74:	aa 1f       	adc	r26, r26
     e76:	64 9f       	mul	r22, r20
     e78:	66 27       	eor	r22, r22
     e7a:	b0 0d       	add	r27, r0
     e7c:	a1 1d       	adc	r26, r1
     e7e:	66 1f       	adc	r22, r22
     e80:	82 9f       	mul	r24, r18
     e82:	22 27       	eor	r18, r18
     e84:	b0 0d       	add	r27, r0
     e86:	a1 1d       	adc	r26, r1
     e88:	62 1f       	adc	r22, r18
     e8a:	73 9f       	mul	r23, r19
     e8c:	b0 0d       	add	r27, r0
     e8e:	a1 1d       	adc	r26, r1
     e90:	62 1f       	adc	r22, r18
     e92:	83 9f       	mul	r24, r19
     e94:	a0 0d       	add	r26, r0
     e96:	61 1d       	adc	r22, r1
     e98:	22 1f       	adc	r18, r18
     e9a:	74 9f       	mul	r23, r20
     e9c:	33 27       	eor	r19, r19
     e9e:	a0 0d       	add	r26, r0
     ea0:	61 1d       	adc	r22, r1
     ea2:	23 1f       	adc	r18, r19
     ea4:	84 9f       	mul	r24, r20
     ea6:	60 0d       	add	r22, r0
     ea8:	21 1d       	adc	r18, r1
     eaa:	82 2f       	mov	r24, r18
     eac:	76 2f       	mov	r23, r22
     eae:	6a 2f       	mov	r22, r26
     eb0:	11 24       	eor	r1, r1
     eb2:	9f 57       	subi	r25, 0x7F	; 127
     eb4:	50 40       	sbci	r21, 0x00	; 0
     eb6:	8a f0       	brmi	.+34     	; 0xeda <__mulsf3_pse+0x84>
     eb8:	e1 f0       	breq	.+56     	; 0xef2 <__mulsf3_pse+0x9c>
     eba:	88 23       	and	r24, r24
     ebc:	4a f0       	brmi	.+18     	; 0xed0 <__mulsf3_pse+0x7a>
     ebe:	ee 0f       	add	r30, r30
     ec0:	ff 1f       	adc	r31, r31
     ec2:	bb 1f       	adc	r27, r27
     ec4:	66 1f       	adc	r22, r22
     ec6:	77 1f       	adc	r23, r23
     ec8:	88 1f       	adc	r24, r24
     eca:	91 50       	subi	r25, 0x01	; 1
     ecc:	50 40       	sbci	r21, 0x00	; 0
     ece:	a9 f7       	brne	.-22     	; 0xeba <__mulsf3_pse+0x64>
     ed0:	9e 3f       	cpi	r25, 0xFE	; 254
     ed2:	51 05       	cpc	r21, r1
     ed4:	70 f0       	brcs	.+28     	; 0xef2 <__mulsf3_pse+0x9c>
     ed6:	14 c0       	rjmp	.+40     	; 0xf00 <__fp_inf>
     ed8:	aa cf       	rjmp	.-172    	; 0xe2e <__fp_szero>
     eda:	5f 3f       	cpi	r21, 0xFF	; 255
     edc:	ec f3       	brlt	.-6      	; 0xed8 <__mulsf3_pse+0x82>
     ede:	98 3e       	cpi	r25, 0xE8	; 232
     ee0:	dc f3       	brlt	.-10     	; 0xed8 <__mulsf3_pse+0x82>
     ee2:	86 95       	lsr	r24
     ee4:	77 95       	ror	r23
     ee6:	67 95       	ror	r22
     ee8:	b7 95       	ror	r27
     eea:	f7 95       	ror	r31
     eec:	e7 95       	ror	r30
     eee:	9f 5f       	subi	r25, 0xFF	; 255
     ef0:	c1 f7       	brne	.-16     	; 0xee2 <__mulsf3_pse+0x8c>
     ef2:	fe 2b       	or	r31, r30
     ef4:	88 0f       	add	r24, r24
     ef6:	91 1d       	adc	r25, r1
     ef8:	96 95       	lsr	r25
     efa:	87 95       	ror	r24
     efc:	97 f9       	bld	r25, 7
     efe:	08 95       	ret

00000f00 <__fp_inf>:
     f00:	97 f9       	bld	r25, 7
     f02:	9f 67       	ori	r25, 0x7F	; 127
     f04:	80 e8       	ldi	r24, 0x80	; 128
     f06:	70 e0       	ldi	r23, 0x00	; 0
     f08:	60 e0       	ldi	r22, 0x00	; 0
     f0a:	08 95       	ret

00000f0c <__fp_nan>:
     f0c:	9f ef       	ldi	r25, 0xFF	; 255
     f0e:	80 ec       	ldi	r24, 0xC0	; 192
     f10:	08 95       	ret

00000f12 <__fp_pscA>:
     f12:	00 24       	eor	r0, r0
     f14:	0a 94       	dec	r0
     f16:	16 16       	cp	r1, r22
     f18:	17 06       	cpc	r1, r23
     f1a:	18 06       	cpc	r1, r24
     f1c:	09 06       	cpc	r0, r25
     f1e:	08 95       	ret

00000f20 <__fp_pscB>:
     f20:	00 24       	eor	r0, r0
     f22:	0a 94       	dec	r0
     f24:	12 16       	cp	r1, r18
     f26:	13 06       	cpc	r1, r19
     f28:	14 06       	cpc	r1, r20
     f2a:	05 06       	cpc	r0, r21
     f2c:	08 95       	ret

00000f2e <__fp_round>:
     f2e:	09 2e       	mov	r0, r25
     f30:	03 94       	inc	r0
     f32:	00 0c       	add	r0, r0
     f34:	11 f4       	brne	.+4      	; 0xf3a <__fp_round+0xc>
     f36:	88 23       	and	r24, r24
     f38:	52 f0       	brmi	.+20     	; 0xf4e <__fp_round+0x20>
     f3a:	bb 0f       	add	r27, r27
     f3c:	40 f4       	brcc	.+16     	; 0xf4e <__fp_round+0x20>
     f3e:	bf 2b       	or	r27, r31
     f40:	11 f4       	brne	.+4      	; 0xf46 <__fp_round+0x18>
     f42:	60 ff       	sbrs	r22, 0
     f44:	04 c0       	rjmp	.+8      	; 0xf4e <__fp_round+0x20>
     f46:	6f 5f       	subi	r22, 0xFF	; 255
     f48:	7f 4f       	sbci	r23, 0xFF	; 255
     f4a:	8f 4f       	sbci	r24, 0xFF	; 255
     f4c:	9f 4f       	sbci	r25, 0xFF	; 255
     f4e:	08 95       	ret

00000f50 <__udivmodsi4>:
     f50:	a1 e2       	ldi	r26, 0x21	; 33
     f52:	1a 2e       	mov	r1, r26
     f54:	aa 1b       	sub	r26, r26
     f56:	bb 1b       	sub	r27, r27
     f58:	fd 01       	movw	r30, r26
     f5a:	0d c0       	rjmp	.+26     	; 0xf76 <__udivmodsi4_ep>

00000f5c <__udivmodsi4_loop>:
     f5c:	aa 1f       	adc	r26, r26
     f5e:	bb 1f       	adc	r27, r27
     f60:	ee 1f       	adc	r30, r30
     f62:	ff 1f       	adc	r31, r31
     f64:	a2 17       	cp	r26, r18
     f66:	b3 07       	cpc	r27, r19
     f68:	e4 07       	cpc	r30, r20
     f6a:	f5 07       	cpc	r31, r21
     f6c:	20 f0       	brcs	.+8      	; 0xf76 <__udivmodsi4_ep>
     f6e:	a2 1b       	sub	r26, r18
     f70:	b3 0b       	sbc	r27, r19
     f72:	e4 0b       	sbc	r30, r20
     f74:	f5 0b       	sbc	r31, r21

00000f76 <__udivmodsi4_ep>:
     f76:	66 1f       	adc	r22, r22
     f78:	77 1f       	adc	r23, r23
     f7a:	88 1f       	adc	r24, r24
     f7c:	99 1f       	adc	r25, r25
     f7e:	1a 94       	dec	r1
     f80:	69 f7       	brne	.-38     	; 0xf5c <__udivmodsi4_loop>
     f82:	60 95       	com	r22
     f84:	70 95       	com	r23
     f86:	80 95       	com	r24
     f88:	90 95       	com	r25
     f8a:	9b 01       	movw	r18, r22
     f8c:	ac 01       	movw	r20, r24
     f8e:	bd 01       	movw	r22, r26
     f90:	cf 01       	movw	r24, r30
     f92:	08 95       	ret

00000f94 <atoi>:
     f94:	fc 01       	movw	r30, r24
     f96:	88 27       	eor	r24, r24
     f98:	99 27       	eor	r25, r25
     f9a:	e8 94       	clt
     f9c:	21 91       	ld	r18, Z+
     f9e:	20 32       	cpi	r18, 0x20	; 32
     fa0:	e9 f3       	breq	.-6      	; 0xf9c <atoi+0x8>
     fa2:	29 30       	cpi	r18, 0x09	; 9
     fa4:	10 f0       	brcs	.+4      	; 0xfaa <atoi+0x16>
     fa6:	2e 30       	cpi	r18, 0x0E	; 14
     fa8:	c8 f3       	brcs	.-14     	; 0xf9c <atoi+0x8>
     faa:	2b 32       	cpi	r18, 0x2B	; 43
     fac:	39 f0       	breq	.+14     	; 0xfbc <atoi+0x28>
     fae:	2d 32       	cpi	r18, 0x2D	; 45
     fb0:	31 f4       	brne	.+12     	; 0xfbe <atoi+0x2a>
     fb2:	68 94       	set
     fb4:	03 c0       	rjmp	.+6      	; 0xfbc <atoi+0x28>
     fb6:	25 d0       	rcall	.+74     	; 0x1002 <__mulhi_const_10>
     fb8:	82 0f       	add	r24, r18
     fba:	91 1d       	adc	r25, r1
     fbc:	21 91       	ld	r18, Z+
     fbe:	20 53       	subi	r18, 0x30	; 48
     fc0:	2a 30       	cpi	r18, 0x0A	; 10
     fc2:	c8 f3       	brcs	.-14     	; 0xfb6 <atoi+0x22>
     fc4:	1e f4       	brtc	.+6      	; 0xfcc <atoi+0x38>
     fc6:	90 95       	com	r25
     fc8:	81 95       	neg	r24
     fca:	9f 4f       	sbci	r25, 0xFF	; 255
     fcc:	08 95       	ret

00000fce <strchr>:
     fce:	fc 01       	movw	r30, r24
     fd0:	81 91       	ld	r24, Z+
     fd2:	86 17       	cp	r24, r22
     fd4:	21 f0       	breq	.+8      	; 0xfde <strchr+0x10>
     fd6:	88 23       	and	r24, r24
     fd8:	d9 f7       	brne	.-10     	; 0xfd0 <strchr+0x2>
     fda:	99 27       	eor	r25, r25
     fdc:	08 95       	ret
     fde:	31 97       	sbiw	r30, 0x01	; 1
     fe0:	cf 01       	movw	r24, r30
     fe2:	08 95       	ret

00000fe4 <strncpy>:
     fe4:	fb 01       	movw	r30, r22
     fe6:	dc 01       	movw	r26, r24
     fe8:	41 50       	subi	r20, 0x01	; 1
     fea:	50 40       	sbci	r21, 0x00	; 0
     fec:	48 f0       	brcs	.+18     	; 0x1000 <__EEPROM_REGION_LENGTH__>
     fee:	01 90       	ld	r0, Z+
     ff0:	0d 92       	st	X+, r0
     ff2:	00 20       	and	r0, r0
     ff4:	c9 f7       	brne	.-14     	; 0xfe8 <strncpy+0x4>
     ff6:	01 c0       	rjmp	.+2      	; 0xffa <strncpy+0x16>
     ff8:	1d 92       	st	X+, r1
     ffa:	41 50       	subi	r20, 0x01	; 1
     ffc:	50 40       	sbci	r21, 0x00	; 0
     ffe:	e0 f7       	brcc	.-8      	; 0xff8 <strncpy+0x14>
    1000:	08 95       	ret

00001002 <__mulhi_const_10>:
    1002:	7a e0       	ldi	r23, 0x0A	; 10
    1004:	97 9f       	mul	r25, r23
    1006:	90 2d       	mov	r25, r0
    1008:	87 9f       	mul	r24, r23
    100a:	80 2d       	mov	r24, r0
    100c:	91 0d       	add	r25, r1
    100e:	11 24       	eor	r1, r1
    1010:	08 95       	ret

00001012 <snprintf>:
    1012:	0f 93       	push	r16
    1014:	1f 93       	push	r17
    1016:	cf 93       	push	r28
    1018:	df 93       	push	r29
    101a:	cd b7       	in	r28, 0x3d	; 61
    101c:	de b7       	in	r29, 0x3e	; 62
    101e:	2e 97       	sbiw	r28, 0x0e	; 14
    1020:	0f b6       	in	r0, 0x3f	; 63
    1022:	f8 94       	cli
    1024:	de bf       	out	0x3e, r29	; 62
    1026:	0f be       	out	0x3f, r0	; 63
    1028:	cd bf       	out	0x3d, r28	; 61
    102a:	0e 89       	ldd	r16, Y+22	; 0x16
    102c:	1f 89       	ldd	r17, Y+23	; 0x17
    102e:	88 8d       	ldd	r24, Y+24	; 0x18
    1030:	99 8d       	ldd	r25, Y+25	; 0x19
    1032:	26 e0       	ldi	r18, 0x06	; 6
    1034:	2c 83       	std	Y+4, r18	; 0x04
    1036:	1a 83       	std	Y+2, r17	; 0x02
    1038:	09 83       	std	Y+1, r16	; 0x01
    103a:	97 ff       	sbrs	r25, 7
    103c:	02 c0       	rjmp	.+4      	; 0x1042 <snprintf+0x30>
    103e:	80 e0       	ldi	r24, 0x00	; 0
    1040:	90 e8       	ldi	r25, 0x80	; 128
    1042:	01 97       	sbiw	r24, 0x01	; 1
    1044:	9e 83       	std	Y+6, r25	; 0x06
    1046:	8d 83       	std	Y+5, r24	; 0x05
    1048:	ae 01       	movw	r20, r28
    104a:	44 5e       	subi	r20, 0xE4	; 228
    104c:	5f 4f       	sbci	r21, 0xFF	; 255
    104e:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1050:	7b 8d       	ldd	r23, Y+27	; 0x1b
    1052:	ce 01       	movw	r24, r28
    1054:	01 96       	adiw	r24, 0x01	; 1
    1056:	19 d0       	rcall	.+50     	; 0x108a <vfprintf>
    1058:	4d 81       	ldd	r20, Y+5	; 0x05
    105a:	5e 81       	ldd	r21, Y+6	; 0x06
    105c:	57 fd       	sbrc	r21, 7
    105e:	0a c0       	rjmp	.+20     	; 0x1074 <snprintf+0x62>
    1060:	2f 81       	ldd	r18, Y+7	; 0x07
    1062:	38 85       	ldd	r19, Y+8	; 0x08
    1064:	42 17       	cp	r20, r18
    1066:	53 07       	cpc	r21, r19
    1068:	0c f4       	brge	.+2      	; 0x106c <snprintf+0x5a>
    106a:	9a 01       	movw	r18, r20
    106c:	f8 01       	movw	r30, r16
    106e:	e2 0f       	add	r30, r18
    1070:	f3 1f       	adc	r31, r19
    1072:	10 82       	st	Z, r1
    1074:	2e 96       	adiw	r28, 0x0e	; 14
    1076:	0f b6       	in	r0, 0x3f	; 63
    1078:	f8 94       	cli
    107a:	de bf       	out	0x3e, r29	; 62
    107c:	0f be       	out	0x3f, r0	; 63
    107e:	cd bf       	out	0x3d, r28	; 61
    1080:	df 91       	pop	r29
    1082:	cf 91       	pop	r28
    1084:	1f 91       	pop	r17
    1086:	0f 91       	pop	r16
    1088:	08 95       	ret

0000108a <vfprintf>:
    108a:	2f 92       	push	r2
    108c:	3f 92       	push	r3
    108e:	4f 92       	push	r4
    1090:	5f 92       	push	r5
    1092:	6f 92       	push	r6
    1094:	7f 92       	push	r7
    1096:	8f 92       	push	r8
    1098:	9f 92       	push	r9
    109a:	af 92       	push	r10
    109c:	bf 92       	push	r11
    109e:	cf 92       	push	r12
    10a0:	df 92       	push	r13
    10a2:	ef 92       	push	r14
    10a4:	ff 92       	push	r15
    10a6:	0f 93       	push	r16
    10a8:	1f 93       	push	r17
    10aa:	cf 93       	push	r28
    10ac:	df 93       	push	r29
    10ae:	cd b7       	in	r28, 0x3d	; 61
    10b0:	de b7       	in	r29, 0x3e	; 62
    10b2:	2b 97       	sbiw	r28, 0x0b	; 11
    10b4:	0f b6       	in	r0, 0x3f	; 63
    10b6:	f8 94       	cli
    10b8:	de bf       	out	0x3e, r29	; 62
    10ba:	0f be       	out	0x3f, r0	; 63
    10bc:	cd bf       	out	0x3d, r28	; 61
    10be:	6c 01       	movw	r12, r24
    10c0:	7b 01       	movw	r14, r22
    10c2:	8a 01       	movw	r16, r20
    10c4:	fc 01       	movw	r30, r24
    10c6:	17 82       	std	Z+7, r1	; 0x07
    10c8:	16 82       	std	Z+6, r1	; 0x06
    10ca:	83 81       	ldd	r24, Z+3	; 0x03
    10cc:	81 ff       	sbrs	r24, 1
    10ce:	bf c1       	rjmp	.+894    	; 0x144e <vfprintf+0x3c4>
    10d0:	ce 01       	movw	r24, r28
    10d2:	01 96       	adiw	r24, 0x01	; 1
    10d4:	3c 01       	movw	r6, r24
    10d6:	f6 01       	movw	r30, r12
    10d8:	93 81       	ldd	r25, Z+3	; 0x03
    10da:	f7 01       	movw	r30, r14
    10dc:	93 fd       	sbrc	r25, 3
    10de:	85 91       	lpm	r24, Z+
    10e0:	93 ff       	sbrs	r25, 3
    10e2:	81 91       	ld	r24, Z+
    10e4:	7f 01       	movw	r14, r30
    10e6:	88 23       	and	r24, r24
    10e8:	09 f4       	brne	.+2      	; 0x10ec <vfprintf+0x62>
    10ea:	ad c1       	rjmp	.+858    	; 0x1446 <vfprintf+0x3bc>
    10ec:	85 32       	cpi	r24, 0x25	; 37
    10ee:	39 f4       	brne	.+14     	; 0x10fe <vfprintf+0x74>
    10f0:	93 fd       	sbrc	r25, 3
    10f2:	85 91       	lpm	r24, Z+
    10f4:	93 ff       	sbrs	r25, 3
    10f6:	81 91       	ld	r24, Z+
    10f8:	7f 01       	movw	r14, r30
    10fa:	85 32       	cpi	r24, 0x25	; 37
    10fc:	21 f4       	brne	.+8      	; 0x1106 <vfprintf+0x7c>
    10fe:	b6 01       	movw	r22, r12
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	d6 d1       	rcall	.+940    	; 0x14b0 <fputc>
    1104:	e8 cf       	rjmp	.-48     	; 0x10d6 <vfprintf+0x4c>
    1106:	91 2c       	mov	r9, r1
    1108:	21 2c       	mov	r2, r1
    110a:	31 2c       	mov	r3, r1
    110c:	ff e1       	ldi	r31, 0x1F	; 31
    110e:	f3 15       	cp	r31, r3
    1110:	d8 f0       	brcs	.+54     	; 0x1148 <vfprintf+0xbe>
    1112:	8b 32       	cpi	r24, 0x2B	; 43
    1114:	79 f0       	breq	.+30     	; 0x1134 <vfprintf+0xaa>
    1116:	38 f4       	brcc	.+14     	; 0x1126 <vfprintf+0x9c>
    1118:	80 32       	cpi	r24, 0x20	; 32
    111a:	79 f0       	breq	.+30     	; 0x113a <vfprintf+0xb0>
    111c:	83 32       	cpi	r24, 0x23	; 35
    111e:	a1 f4       	brne	.+40     	; 0x1148 <vfprintf+0xbe>
    1120:	23 2d       	mov	r18, r3
    1122:	20 61       	ori	r18, 0x10	; 16
    1124:	1d c0       	rjmp	.+58     	; 0x1160 <vfprintf+0xd6>
    1126:	8d 32       	cpi	r24, 0x2D	; 45
    1128:	61 f0       	breq	.+24     	; 0x1142 <vfprintf+0xb8>
    112a:	80 33       	cpi	r24, 0x30	; 48
    112c:	69 f4       	brne	.+26     	; 0x1148 <vfprintf+0xbe>
    112e:	23 2d       	mov	r18, r3
    1130:	21 60       	ori	r18, 0x01	; 1
    1132:	16 c0       	rjmp	.+44     	; 0x1160 <vfprintf+0xd6>
    1134:	83 2d       	mov	r24, r3
    1136:	82 60       	ori	r24, 0x02	; 2
    1138:	38 2e       	mov	r3, r24
    113a:	e3 2d       	mov	r30, r3
    113c:	e4 60       	ori	r30, 0x04	; 4
    113e:	3e 2e       	mov	r3, r30
    1140:	2a c0       	rjmp	.+84     	; 0x1196 <vfprintf+0x10c>
    1142:	f3 2d       	mov	r31, r3
    1144:	f8 60       	ori	r31, 0x08	; 8
    1146:	1d c0       	rjmp	.+58     	; 0x1182 <vfprintf+0xf8>
    1148:	37 fc       	sbrc	r3, 7
    114a:	2d c0       	rjmp	.+90     	; 0x11a6 <vfprintf+0x11c>
    114c:	20 ed       	ldi	r18, 0xD0	; 208
    114e:	28 0f       	add	r18, r24
    1150:	2a 30       	cpi	r18, 0x0A	; 10
    1152:	40 f0       	brcs	.+16     	; 0x1164 <vfprintf+0xda>
    1154:	8e 32       	cpi	r24, 0x2E	; 46
    1156:	b9 f4       	brne	.+46     	; 0x1186 <vfprintf+0xfc>
    1158:	36 fc       	sbrc	r3, 6
    115a:	75 c1       	rjmp	.+746    	; 0x1446 <vfprintf+0x3bc>
    115c:	23 2d       	mov	r18, r3
    115e:	20 64       	ori	r18, 0x40	; 64
    1160:	32 2e       	mov	r3, r18
    1162:	19 c0       	rjmp	.+50     	; 0x1196 <vfprintf+0x10c>
    1164:	36 fe       	sbrs	r3, 6
    1166:	06 c0       	rjmp	.+12     	; 0x1174 <vfprintf+0xea>
    1168:	8a e0       	ldi	r24, 0x0A	; 10
    116a:	98 9e       	mul	r9, r24
    116c:	20 0d       	add	r18, r0
    116e:	11 24       	eor	r1, r1
    1170:	92 2e       	mov	r9, r18
    1172:	11 c0       	rjmp	.+34     	; 0x1196 <vfprintf+0x10c>
    1174:	ea e0       	ldi	r30, 0x0A	; 10
    1176:	2e 9e       	mul	r2, r30
    1178:	20 0d       	add	r18, r0
    117a:	11 24       	eor	r1, r1
    117c:	22 2e       	mov	r2, r18
    117e:	f3 2d       	mov	r31, r3
    1180:	f0 62       	ori	r31, 0x20	; 32
    1182:	3f 2e       	mov	r3, r31
    1184:	08 c0       	rjmp	.+16     	; 0x1196 <vfprintf+0x10c>
    1186:	8c 36       	cpi	r24, 0x6C	; 108
    1188:	21 f4       	brne	.+8      	; 0x1192 <vfprintf+0x108>
    118a:	83 2d       	mov	r24, r3
    118c:	80 68       	ori	r24, 0x80	; 128
    118e:	38 2e       	mov	r3, r24
    1190:	02 c0       	rjmp	.+4      	; 0x1196 <vfprintf+0x10c>
    1192:	88 36       	cpi	r24, 0x68	; 104
    1194:	41 f4       	brne	.+16     	; 0x11a6 <vfprintf+0x11c>
    1196:	f7 01       	movw	r30, r14
    1198:	93 fd       	sbrc	r25, 3
    119a:	85 91       	lpm	r24, Z+
    119c:	93 ff       	sbrs	r25, 3
    119e:	81 91       	ld	r24, Z+
    11a0:	7f 01       	movw	r14, r30
    11a2:	81 11       	cpse	r24, r1
    11a4:	b3 cf       	rjmp	.-154    	; 0x110c <vfprintf+0x82>
    11a6:	98 2f       	mov	r25, r24
    11a8:	9f 7d       	andi	r25, 0xDF	; 223
    11aa:	95 54       	subi	r25, 0x45	; 69
    11ac:	93 30       	cpi	r25, 0x03	; 3
    11ae:	28 f4       	brcc	.+10     	; 0x11ba <vfprintf+0x130>
    11b0:	0c 5f       	subi	r16, 0xFC	; 252
    11b2:	1f 4f       	sbci	r17, 0xFF	; 255
    11b4:	9f e3       	ldi	r25, 0x3F	; 63
    11b6:	99 83       	std	Y+1, r25	; 0x01
    11b8:	0d c0       	rjmp	.+26     	; 0x11d4 <vfprintf+0x14a>
    11ba:	83 36       	cpi	r24, 0x63	; 99
    11bc:	31 f0       	breq	.+12     	; 0x11ca <vfprintf+0x140>
    11be:	83 37       	cpi	r24, 0x73	; 115
    11c0:	71 f0       	breq	.+28     	; 0x11de <vfprintf+0x154>
    11c2:	83 35       	cpi	r24, 0x53	; 83
    11c4:	09 f0       	breq	.+2      	; 0x11c8 <vfprintf+0x13e>
    11c6:	55 c0       	rjmp	.+170    	; 0x1272 <vfprintf+0x1e8>
    11c8:	20 c0       	rjmp	.+64     	; 0x120a <vfprintf+0x180>
    11ca:	f8 01       	movw	r30, r16
    11cc:	80 81       	ld	r24, Z
    11ce:	89 83       	std	Y+1, r24	; 0x01
    11d0:	0e 5f       	subi	r16, 0xFE	; 254
    11d2:	1f 4f       	sbci	r17, 0xFF	; 255
    11d4:	88 24       	eor	r8, r8
    11d6:	83 94       	inc	r8
    11d8:	91 2c       	mov	r9, r1
    11da:	53 01       	movw	r10, r6
    11dc:	12 c0       	rjmp	.+36     	; 0x1202 <vfprintf+0x178>
    11de:	28 01       	movw	r4, r16
    11e0:	f2 e0       	ldi	r31, 0x02	; 2
    11e2:	4f 0e       	add	r4, r31
    11e4:	51 1c       	adc	r5, r1
    11e6:	f8 01       	movw	r30, r16
    11e8:	a0 80       	ld	r10, Z
    11ea:	b1 80       	ldd	r11, Z+1	; 0x01
    11ec:	36 fe       	sbrs	r3, 6
    11ee:	03 c0       	rjmp	.+6      	; 0x11f6 <vfprintf+0x16c>
    11f0:	69 2d       	mov	r22, r9
    11f2:	70 e0       	ldi	r23, 0x00	; 0
    11f4:	02 c0       	rjmp	.+4      	; 0x11fa <vfprintf+0x170>
    11f6:	6f ef       	ldi	r22, 0xFF	; 255
    11f8:	7f ef       	ldi	r23, 0xFF	; 255
    11fa:	c5 01       	movw	r24, r10
    11fc:	4e d1       	rcall	.+668    	; 0x149a <strnlen>
    11fe:	4c 01       	movw	r8, r24
    1200:	82 01       	movw	r16, r4
    1202:	f3 2d       	mov	r31, r3
    1204:	ff 77       	andi	r31, 0x7F	; 127
    1206:	3f 2e       	mov	r3, r31
    1208:	15 c0       	rjmp	.+42     	; 0x1234 <vfprintf+0x1aa>
    120a:	28 01       	movw	r4, r16
    120c:	22 e0       	ldi	r18, 0x02	; 2
    120e:	42 0e       	add	r4, r18
    1210:	51 1c       	adc	r5, r1
    1212:	f8 01       	movw	r30, r16
    1214:	a0 80       	ld	r10, Z
    1216:	b1 80       	ldd	r11, Z+1	; 0x01
    1218:	36 fe       	sbrs	r3, 6
    121a:	03 c0       	rjmp	.+6      	; 0x1222 <vfprintf+0x198>
    121c:	69 2d       	mov	r22, r9
    121e:	70 e0       	ldi	r23, 0x00	; 0
    1220:	02 c0       	rjmp	.+4      	; 0x1226 <vfprintf+0x19c>
    1222:	6f ef       	ldi	r22, 0xFF	; 255
    1224:	7f ef       	ldi	r23, 0xFF	; 255
    1226:	c5 01       	movw	r24, r10
    1228:	2d d1       	rcall	.+602    	; 0x1484 <strnlen_P>
    122a:	4c 01       	movw	r8, r24
    122c:	f3 2d       	mov	r31, r3
    122e:	f0 68       	ori	r31, 0x80	; 128
    1230:	3f 2e       	mov	r3, r31
    1232:	82 01       	movw	r16, r4
    1234:	33 fc       	sbrc	r3, 3
    1236:	19 c0       	rjmp	.+50     	; 0x126a <vfprintf+0x1e0>
    1238:	82 2d       	mov	r24, r2
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	88 16       	cp	r8, r24
    123e:	99 06       	cpc	r9, r25
    1240:	a0 f4       	brcc	.+40     	; 0x126a <vfprintf+0x1e0>
    1242:	b6 01       	movw	r22, r12
    1244:	80 e2       	ldi	r24, 0x20	; 32
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	33 d1       	rcall	.+614    	; 0x14b0 <fputc>
    124a:	2a 94       	dec	r2
    124c:	f5 cf       	rjmp	.-22     	; 0x1238 <vfprintf+0x1ae>
    124e:	f5 01       	movw	r30, r10
    1250:	37 fc       	sbrc	r3, 7
    1252:	85 91       	lpm	r24, Z+
    1254:	37 fe       	sbrs	r3, 7
    1256:	81 91       	ld	r24, Z+
    1258:	5f 01       	movw	r10, r30
    125a:	b6 01       	movw	r22, r12
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	28 d1       	rcall	.+592    	; 0x14b0 <fputc>
    1260:	21 10       	cpse	r2, r1
    1262:	2a 94       	dec	r2
    1264:	21 e0       	ldi	r18, 0x01	; 1
    1266:	82 1a       	sub	r8, r18
    1268:	91 08       	sbc	r9, r1
    126a:	81 14       	cp	r8, r1
    126c:	91 04       	cpc	r9, r1
    126e:	79 f7       	brne	.-34     	; 0x124e <vfprintf+0x1c4>
    1270:	e1 c0       	rjmp	.+450    	; 0x1434 <vfprintf+0x3aa>
    1272:	84 36       	cpi	r24, 0x64	; 100
    1274:	11 f0       	breq	.+4      	; 0x127a <vfprintf+0x1f0>
    1276:	89 36       	cpi	r24, 0x69	; 105
    1278:	39 f5       	brne	.+78     	; 0x12c8 <vfprintf+0x23e>
    127a:	f8 01       	movw	r30, r16
    127c:	37 fe       	sbrs	r3, 7
    127e:	07 c0       	rjmp	.+14     	; 0x128e <vfprintf+0x204>
    1280:	60 81       	ld	r22, Z
    1282:	71 81       	ldd	r23, Z+1	; 0x01
    1284:	82 81       	ldd	r24, Z+2	; 0x02
    1286:	93 81       	ldd	r25, Z+3	; 0x03
    1288:	0c 5f       	subi	r16, 0xFC	; 252
    128a:	1f 4f       	sbci	r17, 0xFF	; 255
    128c:	08 c0       	rjmp	.+16     	; 0x129e <vfprintf+0x214>
    128e:	60 81       	ld	r22, Z
    1290:	71 81       	ldd	r23, Z+1	; 0x01
    1292:	07 2e       	mov	r0, r23
    1294:	00 0c       	add	r0, r0
    1296:	88 0b       	sbc	r24, r24
    1298:	99 0b       	sbc	r25, r25
    129a:	0e 5f       	subi	r16, 0xFE	; 254
    129c:	1f 4f       	sbci	r17, 0xFF	; 255
    129e:	f3 2d       	mov	r31, r3
    12a0:	ff 76       	andi	r31, 0x6F	; 111
    12a2:	3f 2e       	mov	r3, r31
    12a4:	97 ff       	sbrs	r25, 7
    12a6:	09 c0       	rjmp	.+18     	; 0x12ba <vfprintf+0x230>
    12a8:	90 95       	com	r25
    12aa:	80 95       	com	r24
    12ac:	70 95       	com	r23
    12ae:	61 95       	neg	r22
    12b0:	7f 4f       	sbci	r23, 0xFF	; 255
    12b2:	8f 4f       	sbci	r24, 0xFF	; 255
    12b4:	9f 4f       	sbci	r25, 0xFF	; 255
    12b6:	f0 68       	ori	r31, 0x80	; 128
    12b8:	3f 2e       	mov	r3, r31
    12ba:	2a e0       	ldi	r18, 0x0A	; 10
    12bc:	30 e0       	ldi	r19, 0x00	; 0
    12be:	a3 01       	movw	r20, r6
    12c0:	33 d1       	rcall	.+614    	; 0x1528 <__ultoa_invert>
    12c2:	88 2e       	mov	r8, r24
    12c4:	86 18       	sub	r8, r6
    12c6:	44 c0       	rjmp	.+136    	; 0x1350 <vfprintf+0x2c6>
    12c8:	85 37       	cpi	r24, 0x75	; 117
    12ca:	31 f4       	brne	.+12     	; 0x12d8 <vfprintf+0x24e>
    12cc:	23 2d       	mov	r18, r3
    12ce:	2f 7e       	andi	r18, 0xEF	; 239
    12d0:	b2 2e       	mov	r11, r18
    12d2:	2a e0       	ldi	r18, 0x0A	; 10
    12d4:	30 e0       	ldi	r19, 0x00	; 0
    12d6:	25 c0       	rjmp	.+74     	; 0x1322 <vfprintf+0x298>
    12d8:	93 2d       	mov	r25, r3
    12da:	99 7f       	andi	r25, 0xF9	; 249
    12dc:	b9 2e       	mov	r11, r25
    12de:	8f 36       	cpi	r24, 0x6F	; 111
    12e0:	c1 f0       	breq	.+48     	; 0x1312 <vfprintf+0x288>
    12e2:	18 f4       	brcc	.+6      	; 0x12ea <vfprintf+0x260>
    12e4:	88 35       	cpi	r24, 0x58	; 88
    12e6:	79 f0       	breq	.+30     	; 0x1306 <vfprintf+0x27c>
    12e8:	ae c0       	rjmp	.+348    	; 0x1446 <vfprintf+0x3bc>
    12ea:	80 37       	cpi	r24, 0x70	; 112
    12ec:	19 f0       	breq	.+6      	; 0x12f4 <vfprintf+0x26a>
    12ee:	88 37       	cpi	r24, 0x78	; 120
    12f0:	21 f0       	breq	.+8      	; 0x12fa <vfprintf+0x270>
    12f2:	a9 c0       	rjmp	.+338    	; 0x1446 <vfprintf+0x3bc>
    12f4:	e9 2f       	mov	r30, r25
    12f6:	e0 61       	ori	r30, 0x10	; 16
    12f8:	be 2e       	mov	r11, r30
    12fa:	b4 fe       	sbrs	r11, 4
    12fc:	0d c0       	rjmp	.+26     	; 0x1318 <vfprintf+0x28e>
    12fe:	fb 2d       	mov	r31, r11
    1300:	f4 60       	ori	r31, 0x04	; 4
    1302:	bf 2e       	mov	r11, r31
    1304:	09 c0       	rjmp	.+18     	; 0x1318 <vfprintf+0x28e>
    1306:	34 fe       	sbrs	r3, 4
    1308:	0a c0       	rjmp	.+20     	; 0x131e <vfprintf+0x294>
    130a:	29 2f       	mov	r18, r25
    130c:	26 60       	ori	r18, 0x06	; 6
    130e:	b2 2e       	mov	r11, r18
    1310:	06 c0       	rjmp	.+12     	; 0x131e <vfprintf+0x294>
    1312:	28 e0       	ldi	r18, 0x08	; 8
    1314:	30 e0       	ldi	r19, 0x00	; 0
    1316:	05 c0       	rjmp	.+10     	; 0x1322 <vfprintf+0x298>
    1318:	20 e1       	ldi	r18, 0x10	; 16
    131a:	30 e0       	ldi	r19, 0x00	; 0
    131c:	02 c0       	rjmp	.+4      	; 0x1322 <vfprintf+0x298>
    131e:	20 e1       	ldi	r18, 0x10	; 16
    1320:	32 e0       	ldi	r19, 0x02	; 2
    1322:	f8 01       	movw	r30, r16
    1324:	b7 fe       	sbrs	r11, 7
    1326:	07 c0       	rjmp	.+14     	; 0x1336 <vfprintf+0x2ac>
    1328:	60 81       	ld	r22, Z
    132a:	71 81       	ldd	r23, Z+1	; 0x01
    132c:	82 81       	ldd	r24, Z+2	; 0x02
    132e:	93 81       	ldd	r25, Z+3	; 0x03
    1330:	0c 5f       	subi	r16, 0xFC	; 252
    1332:	1f 4f       	sbci	r17, 0xFF	; 255
    1334:	06 c0       	rjmp	.+12     	; 0x1342 <vfprintf+0x2b8>
    1336:	60 81       	ld	r22, Z
    1338:	71 81       	ldd	r23, Z+1	; 0x01
    133a:	80 e0       	ldi	r24, 0x00	; 0
    133c:	90 e0       	ldi	r25, 0x00	; 0
    133e:	0e 5f       	subi	r16, 0xFE	; 254
    1340:	1f 4f       	sbci	r17, 0xFF	; 255
    1342:	a3 01       	movw	r20, r6
    1344:	f1 d0       	rcall	.+482    	; 0x1528 <__ultoa_invert>
    1346:	88 2e       	mov	r8, r24
    1348:	86 18       	sub	r8, r6
    134a:	fb 2d       	mov	r31, r11
    134c:	ff 77       	andi	r31, 0x7F	; 127
    134e:	3f 2e       	mov	r3, r31
    1350:	36 fe       	sbrs	r3, 6
    1352:	0d c0       	rjmp	.+26     	; 0x136e <vfprintf+0x2e4>
    1354:	23 2d       	mov	r18, r3
    1356:	2e 7f       	andi	r18, 0xFE	; 254
    1358:	a2 2e       	mov	r10, r18
    135a:	89 14       	cp	r8, r9
    135c:	58 f4       	brcc	.+22     	; 0x1374 <vfprintf+0x2ea>
    135e:	34 fe       	sbrs	r3, 4
    1360:	0b c0       	rjmp	.+22     	; 0x1378 <vfprintf+0x2ee>
    1362:	32 fc       	sbrc	r3, 2
    1364:	09 c0       	rjmp	.+18     	; 0x1378 <vfprintf+0x2ee>
    1366:	83 2d       	mov	r24, r3
    1368:	8e 7e       	andi	r24, 0xEE	; 238
    136a:	a8 2e       	mov	r10, r24
    136c:	05 c0       	rjmp	.+10     	; 0x1378 <vfprintf+0x2ee>
    136e:	b8 2c       	mov	r11, r8
    1370:	a3 2c       	mov	r10, r3
    1372:	03 c0       	rjmp	.+6      	; 0x137a <vfprintf+0x2f0>
    1374:	b8 2c       	mov	r11, r8
    1376:	01 c0       	rjmp	.+2      	; 0x137a <vfprintf+0x2f0>
    1378:	b9 2c       	mov	r11, r9
    137a:	a4 fe       	sbrs	r10, 4
    137c:	0f c0       	rjmp	.+30     	; 0x139c <vfprintf+0x312>
    137e:	fe 01       	movw	r30, r28
    1380:	e8 0d       	add	r30, r8
    1382:	f1 1d       	adc	r31, r1
    1384:	80 81       	ld	r24, Z
    1386:	80 33       	cpi	r24, 0x30	; 48
    1388:	21 f4       	brne	.+8      	; 0x1392 <vfprintf+0x308>
    138a:	9a 2d       	mov	r25, r10
    138c:	99 7e       	andi	r25, 0xE9	; 233
    138e:	a9 2e       	mov	r10, r25
    1390:	09 c0       	rjmp	.+18     	; 0x13a4 <vfprintf+0x31a>
    1392:	a2 fe       	sbrs	r10, 2
    1394:	06 c0       	rjmp	.+12     	; 0x13a2 <vfprintf+0x318>
    1396:	b3 94       	inc	r11
    1398:	b3 94       	inc	r11
    139a:	04 c0       	rjmp	.+8      	; 0x13a4 <vfprintf+0x31a>
    139c:	8a 2d       	mov	r24, r10
    139e:	86 78       	andi	r24, 0x86	; 134
    13a0:	09 f0       	breq	.+2      	; 0x13a4 <vfprintf+0x31a>
    13a2:	b3 94       	inc	r11
    13a4:	a3 fc       	sbrc	r10, 3
    13a6:	10 c0       	rjmp	.+32     	; 0x13c8 <vfprintf+0x33e>
    13a8:	a0 fe       	sbrs	r10, 0
    13aa:	06 c0       	rjmp	.+12     	; 0x13b8 <vfprintf+0x32e>
    13ac:	b2 14       	cp	r11, r2
    13ae:	80 f4       	brcc	.+32     	; 0x13d0 <vfprintf+0x346>
    13b0:	28 0c       	add	r2, r8
    13b2:	92 2c       	mov	r9, r2
    13b4:	9b 18       	sub	r9, r11
    13b6:	0d c0       	rjmp	.+26     	; 0x13d2 <vfprintf+0x348>
    13b8:	b2 14       	cp	r11, r2
    13ba:	58 f4       	brcc	.+22     	; 0x13d2 <vfprintf+0x348>
    13bc:	b6 01       	movw	r22, r12
    13be:	80 e2       	ldi	r24, 0x20	; 32
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	76 d0       	rcall	.+236    	; 0x14b0 <fputc>
    13c4:	b3 94       	inc	r11
    13c6:	f8 cf       	rjmp	.-16     	; 0x13b8 <vfprintf+0x32e>
    13c8:	b2 14       	cp	r11, r2
    13ca:	18 f4       	brcc	.+6      	; 0x13d2 <vfprintf+0x348>
    13cc:	2b 18       	sub	r2, r11
    13ce:	02 c0       	rjmp	.+4      	; 0x13d4 <vfprintf+0x34a>
    13d0:	98 2c       	mov	r9, r8
    13d2:	21 2c       	mov	r2, r1
    13d4:	a4 fe       	sbrs	r10, 4
    13d6:	0f c0       	rjmp	.+30     	; 0x13f6 <vfprintf+0x36c>
    13d8:	b6 01       	movw	r22, r12
    13da:	80 e3       	ldi	r24, 0x30	; 48
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	68 d0       	rcall	.+208    	; 0x14b0 <fputc>
    13e0:	a2 fe       	sbrs	r10, 2
    13e2:	16 c0       	rjmp	.+44     	; 0x1410 <vfprintf+0x386>
    13e4:	a1 fc       	sbrc	r10, 1
    13e6:	03 c0       	rjmp	.+6      	; 0x13ee <vfprintf+0x364>
    13e8:	88 e7       	ldi	r24, 0x78	; 120
    13ea:	90 e0       	ldi	r25, 0x00	; 0
    13ec:	02 c0       	rjmp	.+4      	; 0x13f2 <vfprintf+0x368>
    13ee:	88 e5       	ldi	r24, 0x58	; 88
    13f0:	90 e0       	ldi	r25, 0x00	; 0
    13f2:	b6 01       	movw	r22, r12
    13f4:	0c c0       	rjmp	.+24     	; 0x140e <vfprintf+0x384>
    13f6:	8a 2d       	mov	r24, r10
    13f8:	86 78       	andi	r24, 0x86	; 134
    13fa:	51 f0       	breq	.+20     	; 0x1410 <vfprintf+0x386>
    13fc:	a1 fe       	sbrs	r10, 1
    13fe:	02 c0       	rjmp	.+4      	; 0x1404 <vfprintf+0x37a>
    1400:	8b e2       	ldi	r24, 0x2B	; 43
    1402:	01 c0       	rjmp	.+2      	; 0x1406 <vfprintf+0x37c>
    1404:	80 e2       	ldi	r24, 0x20	; 32
    1406:	a7 fc       	sbrc	r10, 7
    1408:	8d e2       	ldi	r24, 0x2D	; 45
    140a:	b6 01       	movw	r22, r12
    140c:	90 e0       	ldi	r25, 0x00	; 0
    140e:	50 d0       	rcall	.+160    	; 0x14b0 <fputc>
    1410:	89 14       	cp	r8, r9
    1412:	30 f4       	brcc	.+12     	; 0x1420 <vfprintf+0x396>
    1414:	b6 01       	movw	r22, r12
    1416:	80 e3       	ldi	r24, 0x30	; 48
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	4a d0       	rcall	.+148    	; 0x14b0 <fputc>
    141c:	9a 94       	dec	r9
    141e:	f8 cf       	rjmp	.-16     	; 0x1410 <vfprintf+0x386>
    1420:	8a 94       	dec	r8
    1422:	f3 01       	movw	r30, r6
    1424:	e8 0d       	add	r30, r8
    1426:	f1 1d       	adc	r31, r1
    1428:	80 81       	ld	r24, Z
    142a:	b6 01       	movw	r22, r12
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	40 d0       	rcall	.+128    	; 0x14b0 <fputc>
    1430:	81 10       	cpse	r8, r1
    1432:	f6 cf       	rjmp	.-20     	; 0x1420 <vfprintf+0x396>
    1434:	22 20       	and	r2, r2
    1436:	09 f4       	brne	.+2      	; 0x143a <vfprintf+0x3b0>
    1438:	4e ce       	rjmp	.-868    	; 0x10d6 <vfprintf+0x4c>
    143a:	b6 01       	movw	r22, r12
    143c:	80 e2       	ldi	r24, 0x20	; 32
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	37 d0       	rcall	.+110    	; 0x14b0 <fputc>
    1442:	2a 94       	dec	r2
    1444:	f7 cf       	rjmp	.-18     	; 0x1434 <vfprintf+0x3aa>
    1446:	f6 01       	movw	r30, r12
    1448:	86 81       	ldd	r24, Z+6	; 0x06
    144a:	97 81       	ldd	r25, Z+7	; 0x07
    144c:	02 c0       	rjmp	.+4      	; 0x1452 <vfprintf+0x3c8>
    144e:	8f ef       	ldi	r24, 0xFF	; 255
    1450:	9f ef       	ldi	r25, 0xFF	; 255
    1452:	2b 96       	adiw	r28, 0x0b	; 11
    1454:	0f b6       	in	r0, 0x3f	; 63
    1456:	f8 94       	cli
    1458:	de bf       	out	0x3e, r29	; 62
    145a:	0f be       	out	0x3f, r0	; 63
    145c:	cd bf       	out	0x3d, r28	; 61
    145e:	df 91       	pop	r29
    1460:	cf 91       	pop	r28
    1462:	1f 91       	pop	r17
    1464:	0f 91       	pop	r16
    1466:	ff 90       	pop	r15
    1468:	ef 90       	pop	r14
    146a:	df 90       	pop	r13
    146c:	cf 90       	pop	r12
    146e:	bf 90       	pop	r11
    1470:	af 90       	pop	r10
    1472:	9f 90       	pop	r9
    1474:	8f 90       	pop	r8
    1476:	7f 90       	pop	r7
    1478:	6f 90       	pop	r6
    147a:	5f 90       	pop	r5
    147c:	4f 90       	pop	r4
    147e:	3f 90       	pop	r3
    1480:	2f 90       	pop	r2
    1482:	08 95       	ret

00001484 <strnlen_P>:
    1484:	fc 01       	movw	r30, r24
    1486:	05 90       	lpm	r0, Z+
    1488:	61 50       	subi	r22, 0x01	; 1
    148a:	70 40       	sbci	r23, 0x00	; 0
    148c:	01 10       	cpse	r0, r1
    148e:	d8 f7       	brcc	.-10     	; 0x1486 <strnlen_P+0x2>
    1490:	80 95       	com	r24
    1492:	90 95       	com	r25
    1494:	8e 0f       	add	r24, r30
    1496:	9f 1f       	adc	r25, r31
    1498:	08 95       	ret

0000149a <strnlen>:
    149a:	fc 01       	movw	r30, r24
    149c:	61 50       	subi	r22, 0x01	; 1
    149e:	70 40       	sbci	r23, 0x00	; 0
    14a0:	01 90       	ld	r0, Z+
    14a2:	01 10       	cpse	r0, r1
    14a4:	d8 f7       	brcc	.-10     	; 0x149c <strnlen+0x2>
    14a6:	80 95       	com	r24
    14a8:	90 95       	com	r25
    14aa:	8e 0f       	add	r24, r30
    14ac:	9f 1f       	adc	r25, r31
    14ae:	08 95       	ret

000014b0 <fputc>:
    14b0:	0f 93       	push	r16
    14b2:	1f 93       	push	r17
    14b4:	cf 93       	push	r28
    14b6:	df 93       	push	r29
    14b8:	fb 01       	movw	r30, r22
    14ba:	23 81       	ldd	r18, Z+3	; 0x03
    14bc:	21 fd       	sbrc	r18, 1
    14be:	03 c0       	rjmp	.+6      	; 0x14c6 <fputc+0x16>
    14c0:	8f ef       	ldi	r24, 0xFF	; 255
    14c2:	9f ef       	ldi	r25, 0xFF	; 255
    14c4:	2c c0       	rjmp	.+88     	; 0x151e <fputc+0x6e>
    14c6:	22 ff       	sbrs	r18, 2
    14c8:	16 c0       	rjmp	.+44     	; 0x14f6 <fputc+0x46>
    14ca:	46 81       	ldd	r20, Z+6	; 0x06
    14cc:	57 81       	ldd	r21, Z+7	; 0x07
    14ce:	24 81       	ldd	r18, Z+4	; 0x04
    14d0:	35 81       	ldd	r19, Z+5	; 0x05
    14d2:	42 17       	cp	r20, r18
    14d4:	53 07       	cpc	r21, r19
    14d6:	44 f4       	brge	.+16     	; 0x14e8 <fputc+0x38>
    14d8:	a0 81       	ld	r26, Z
    14da:	b1 81       	ldd	r27, Z+1	; 0x01
    14dc:	9d 01       	movw	r18, r26
    14de:	2f 5f       	subi	r18, 0xFF	; 255
    14e0:	3f 4f       	sbci	r19, 0xFF	; 255
    14e2:	31 83       	std	Z+1, r19	; 0x01
    14e4:	20 83       	st	Z, r18
    14e6:	8c 93       	st	X, r24
    14e8:	26 81       	ldd	r18, Z+6	; 0x06
    14ea:	37 81       	ldd	r19, Z+7	; 0x07
    14ec:	2f 5f       	subi	r18, 0xFF	; 255
    14ee:	3f 4f       	sbci	r19, 0xFF	; 255
    14f0:	37 83       	std	Z+7, r19	; 0x07
    14f2:	26 83       	std	Z+6, r18	; 0x06
    14f4:	14 c0       	rjmp	.+40     	; 0x151e <fputc+0x6e>
    14f6:	8b 01       	movw	r16, r22
    14f8:	ec 01       	movw	r28, r24
    14fa:	fb 01       	movw	r30, r22
    14fc:	00 84       	ldd	r0, Z+8	; 0x08
    14fe:	f1 85       	ldd	r31, Z+9	; 0x09
    1500:	e0 2d       	mov	r30, r0
    1502:	19 95       	eicall
    1504:	89 2b       	or	r24, r25
    1506:	e1 f6       	brne	.-72     	; 0x14c0 <fputc+0x10>
    1508:	d8 01       	movw	r26, r16
    150a:	16 96       	adiw	r26, 0x06	; 6
    150c:	8d 91       	ld	r24, X+
    150e:	9c 91       	ld	r25, X
    1510:	17 97       	sbiw	r26, 0x07	; 7
    1512:	01 96       	adiw	r24, 0x01	; 1
    1514:	17 96       	adiw	r26, 0x07	; 7
    1516:	9c 93       	st	X, r25
    1518:	8e 93       	st	-X, r24
    151a:	16 97       	sbiw	r26, 0x06	; 6
    151c:	ce 01       	movw	r24, r28
    151e:	df 91       	pop	r29
    1520:	cf 91       	pop	r28
    1522:	1f 91       	pop	r17
    1524:	0f 91       	pop	r16
    1526:	08 95       	ret

00001528 <__ultoa_invert>:
    1528:	fa 01       	movw	r30, r20
    152a:	aa 27       	eor	r26, r26
    152c:	28 30       	cpi	r18, 0x08	; 8
    152e:	51 f1       	breq	.+84     	; 0x1584 <__ultoa_invert+0x5c>
    1530:	20 31       	cpi	r18, 0x10	; 16
    1532:	81 f1       	breq	.+96     	; 0x1594 <__ultoa_invert+0x6c>
    1534:	e8 94       	clt
    1536:	6f 93       	push	r22
    1538:	6e 7f       	andi	r22, 0xFE	; 254
    153a:	6e 5f       	subi	r22, 0xFE	; 254
    153c:	7f 4f       	sbci	r23, 0xFF	; 255
    153e:	8f 4f       	sbci	r24, 0xFF	; 255
    1540:	9f 4f       	sbci	r25, 0xFF	; 255
    1542:	af 4f       	sbci	r26, 0xFF	; 255
    1544:	b1 e0       	ldi	r27, 0x01	; 1
    1546:	3e d0       	rcall	.+124    	; 0x15c4 <__ultoa_invert+0x9c>
    1548:	b4 e0       	ldi	r27, 0x04	; 4
    154a:	3c d0       	rcall	.+120    	; 0x15c4 <__ultoa_invert+0x9c>
    154c:	67 0f       	add	r22, r23
    154e:	78 1f       	adc	r23, r24
    1550:	89 1f       	adc	r24, r25
    1552:	9a 1f       	adc	r25, r26
    1554:	a1 1d       	adc	r26, r1
    1556:	68 0f       	add	r22, r24
    1558:	79 1f       	adc	r23, r25
    155a:	8a 1f       	adc	r24, r26
    155c:	91 1d       	adc	r25, r1
    155e:	a1 1d       	adc	r26, r1
    1560:	6a 0f       	add	r22, r26
    1562:	71 1d       	adc	r23, r1
    1564:	81 1d       	adc	r24, r1
    1566:	91 1d       	adc	r25, r1
    1568:	a1 1d       	adc	r26, r1
    156a:	20 d0       	rcall	.+64     	; 0x15ac <__ultoa_invert+0x84>
    156c:	09 f4       	brne	.+2      	; 0x1570 <__ultoa_invert+0x48>
    156e:	68 94       	set
    1570:	3f 91       	pop	r19
    1572:	2a e0       	ldi	r18, 0x0A	; 10
    1574:	26 9f       	mul	r18, r22
    1576:	11 24       	eor	r1, r1
    1578:	30 19       	sub	r19, r0
    157a:	30 5d       	subi	r19, 0xD0	; 208
    157c:	31 93       	st	Z+, r19
    157e:	de f6       	brtc	.-74     	; 0x1536 <__ultoa_invert+0xe>
    1580:	cf 01       	movw	r24, r30
    1582:	08 95       	ret
    1584:	46 2f       	mov	r20, r22
    1586:	47 70       	andi	r20, 0x07	; 7
    1588:	40 5d       	subi	r20, 0xD0	; 208
    158a:	41 93       	st	Z+, r20
    158c:	b3 e0       	ldi	r27, 0x03	; 3
    158e:	0f d0       	rcall	.+30     	; 0x15ae <__ultoa_invert+0x86>
    1590:	c9 f7       	brne	.-14     	; 0x1584 <__ultoa_invert+0x5c>
    1592:	f6 cf       	rjmp	.-20     	; 0x1580 <__ultoa_invert+0x58>
    1594:	46 2f       	mov	r20, r22
    1596:	4f 70       	andi	r20, 0x0F	; 15
    1598:	40 5d       	subi	r20, 0xD0	; 208
    159a:	4a 33       	cpi	r20, 0x3A	; 58
    159c:	18 f0       	brcs	.+6      	; 0x15a4 <__ultoa_invert+0x7c>
    159e:	49 5d       	subi	r20, 0xD9	; 217
    15a0:	31 fd       	sbrc	r19, 1
    15a2:	40 52       	subi	r20, 0x20	; 32
    15a4:	41 93       	st	Z+, r20
    15a6:	02 d0       	rcall	.+4      	; 0x15ac <__ultoa_invert+0x84>
    15a8:	a9 f7       	brne	.-22     	; 0x1594 <__ultoa_invert+0x6c>
    15aa:	ea cf       	rjmp	.-44     	; 0x1580 <__ultoa_invert+0x58>
    15ac:	b4 e0       	ldi	r27, 0x04	; 4
    15ae:	a6 95       	lsr	r26
    15b0:	97 95       	ror	r25
    15b2:	87 95       	ror	r24
    15b4:	77 95       	ror	r23
    15b6:	67 95       	ror	r22
    15b8:	ba 95       	dec	r27
    15ba:	c9 f7       	brne	.-14     	; 0x15ae <__ultoa_invert+0x86>
    15bc:	00 97       	sbiw	r24, 0x00	; 0
    15be:	61 05       	cpc	r22, r1
    15c0:	71 05       	cpc	r23, r1
    15c2:	08 95       	ret
    15c4:	9b 01       	movw	r18, r22
    15c6:	ac 01       	movw	r20, r24
    15c8:	0a 2e       	mov	r0, r26
    15ca:	06 94       	lsr	r0
    15cc:	57 95       	ror	r21
    15ce:	47 95       	ror	r20
    15d0:	37 95       	ror	r19
    15d2:	27 95       	ror	r18
    15d4:	ba 95       	dec	r27
    15d6:	c9 f7       	brne	.-14     	; 0x15ca <__ultoa_invert+0xa2>
    15d8:	62 0f       	add	r22, r18
    15da:	73 1f       	adc	r23, r19
    15dc:	84 1f       	adc	r24, r20
    15de:	95 1f       	adc	r25, r21
    15e0:	a0 1d       	adc	r26, r0
    15e2:	08 95       	ret

000015e4 <_exit>:
    15e4:	f8 94       	cli

000015e6 <__stop_program>:
    15e6:	ff cf       	rjmp	.-2      	; 0x15e6 <__stop_program>
